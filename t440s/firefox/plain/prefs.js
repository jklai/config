# Mozilla User Preferences

/* Do not edit this file.
 *
 * If you make changes to this file while the application is running,
 * the changes will be overwritten when the application exits.
 *
 * To make a manual change to preferences, you can visit the URL about:config
 */

user_pref("app.update.lastUpdateTime.addon-background-update-timer", 1375830310);
user_pref("app.update.lastUpdateTime.background-update-timer", 1375830190);
user_pref("app.update.lastUpdateTime.blocklist-background-update-timer", 1375830430);
user_pref("app.update.lastUpdateTime.browser-cleanup-thumbnails", 1375829810);
user_pref("app.update.lastUpdateTime.microsummary-generator-update-timer", 1293334869);
user_pref("app.update.lastUpdateTime.places-maintenance-timer", 1293335282);
user_pref("app.update.lastUpdateTime.search-engine-update-timer", 1375829930);
user_pref("browser.bookmarks.restore_default_bookmarks", false);
user_pref("browser.cache.disk.capacity", 358400);
user_pref("browser.cache.disk.smart_size.first_run", false);
user_pref("browser.cache.disk.smart_size_cached_value", 640000);
user_pref("browser.cache.frecency_experiment", 1);
user_pref("browser.download.dir", "/home/jason");
user_pref("browser.download.folderList", 2);
user_pref("browser.download.importedFromSqlite", true);
user_pref("browser.download.panel.firstSessionCompleted", true);
user_pref("browser.download.useDownloadDir", false);
user_pref("browser.formfill.enable", false);
user_pref("browser.history_expire_days.mirror", 180);
user_pref("browser.migration.version", 26);
user_pref("browser.newtabpage.enhanced", false);
user_pref("browser.newtabpage.introShown", true);
user_pref("browser.newtabpage.storageVersion", 1);
user_pref("browser.pagethumbnails.storage_version", 3);
user_pref("browser.places.smartBookmarksVersion", 7);
user_pref("browser.preferences.advanced.selectedTabIndex", 0);
user_pref("browser.rights.3.shown", true);
user_pref("browser.safebrowsing.enabled", false);
user_pref("browser.safebrowsing.malware.enabled", false);
user_pref("browser.search.countryCode", "US");
user_pref("browser.search.region", "US");
user_pref("browser.search.update", false);
user_pref("browser.search.useDBForOrder", true);
user_pref("browser.sessionstore.upgradeBackup.latestBuildID", "20150430124100");
user_pref("browser.slowStartup.averageTime", 3336);
user_pref("browser.slowStartup.samples", 4);
user_pref("browser.startup.homepage", "http://www.google.com");
user_pref("browser.startup.homepage_override.buildID", "20150430124100");
user_pref("browser.startup.homepage_override.mstone", "31.6.0");
user_pref("browser.tabs.onTop", false);
user_pref("browser.tabs.warnOnClose", false);
user_pref("browser.tabs.warnOnOpen", false);
user_pref("browser.uiCustomization.state", "{\"placements\":{\"PanelUI-contents\":[\"edit-controls\",\"zoom-controls\",\"new-window-button\",\"privatebrowsing-button\",\"save-page-button\",\"print-button\",\"history-panelmenu\",\"fullscreen-button\",\"find-button\",\"preferences-button\",\"add-ons-button\",\"developer-button\"],\"addon-bar\":[\"addonbar-closebutton\",\"customizableui-special-spring1\",\"status-bar\"],\"PersonalToolbar\":[\"personal-bookmarks\"],\"nav-bar\":[\"unified-back-forward-button\",\"urlbar-container\",\"reload-button\",\"stop-button\",\"search-container\",\"downloads-button\",\"home-button\",\"bookmarks-menu-button\",\"fullscreenflex\",\"window-controls\",\"social-share-button\",\"webrtc-status-button\"]},\"seen\":[],\"dirtyAreaCache\":[\"addon-bar\",\"PersonalToolbar\",\"nav-bar\",\"TabsToolbar\",\"toolbar-menubar\",\"PanelUI-contents\"],\"newElementCount\":1}");
user_pref("browser.urlbar.autocomplete.enabled", false);
user_pref("browser.urlbar.suggest.bookmark", false);
user_pref("browser.urlbar.suggest.history", false);
user_pref("browser.urlbar.suggest.openpage", false);
user_pref("capability.policy.maonoscript.javascript.enabled", "allAccess");
user_pref("capability.policy.maonoscript.sites", "67.15.114.74 67.15.114.75 67.15.114.76 upmyrank.com about: about:addons about:blank about:blocked about:certerror about:config about:home about:neterror about:plugins about:privatebrowsing about:sessionrestore chrome: http://upmyrank.com https://upmyrank.com resource:");
user_pref("datareporting.healthreport.nextDataSubmissionTime", "1375916089983");
user_pref("datareporting.healthreport.service.firstRun", true);
user_pref("datareporting.policy.dataSubmissionPolicyAcceptedVersion", 2);
user_pref("datareporting.policy.dataSubmissionPolicyNotifiedTime", "1430417918425");
user_pref("datareporting.policy.firstRunTime", "1375829689982");
user_pref("datareporting.sessions.current.activeTicks", 5);
user_pref("datareporting.sessions.current.clean", true);
user_pref("datareporting.sessions.current.firstPaint", 1993);
user_pref("datareporting.sessions.current.main", 10);
user_pref("datareporting.sessions.current.sessionRestored", 1091);
user_pref("datareporting.sessions.current.startTime", "1430424662661");
user_pref("datareporting.sessions.current.totalTime", 25);
user_pref("datareporting.sessions.currentIndex", 3);
user_pref("datareporting.sessions.previous.0", "{\"s\":1375829686671,\"a\":25,\"t\":355,\"c\":true,\"m\":2501,\"fp\":6834,\"sr\":5839}");
user_pref("datareporting.sessions.previous.1", "{\"s\":1375830068059,\"a\":66,\"t\":2345,\"c\":true,\"m\":1975,\"fp\":2441,\"sr\":2684}");
user_pref("datareporting.sessions.previous.2", "{\"s\":1430417904637,\"a\":13,\"t\":65,\"c\":true,\"m\":3130,\"fp\":3674,\"sr\":3738}");
user_pref("extensions.alexa.active-buttons", "");
user_pref("extensions.alexa.active-buttons.facebook", "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<buttons>\n  <title>Facebook</title>\n  <id>facebook</id>\n  <button>\n    <type>javascript</type>\n    <id>fb</id>\n    <imageType>icon</imageType>\n    <image><![CDATA[https://s3.amazonaws.com/com.alexa.toolbar/alexa9-prod/buttons/facebook/facebook.png]]></image>\n    <hoverImage><![CDATA[https://s3.amazonaws.com/com.alexa.toolbar/alexa9-prod/buttons/facebook/facebook-hover.png]]></hoverImage>\n    <updatedImage><![CDATA[https://s3.amazonaws.com/com.alexa.toolbar/alexa9-prod/buttons/facebook/facebook-new.png]]></updatedImage>\n    <updatedHoverImage><![CDATA[https://s3.amazonaws.com/com.alexa.toolbar/alexa9-prod/buttons/facebook/facebook-new-hover.png]]></updatedHoverImage>\n    <tooltip>Login to Facebook</tooltip>\n    <javascript>\n  <![CDATA[ \nfunction md5 (str) {\n    var xl;\n\n    var rotateLeft = function (lValue, iShiftBits) {\n        return (lValue<<iShiftBits) | (lValue>>>(32-iShiftBits));\n    };\n\n    var addUnsigned = function (lX,lY) {\n        var lX4,lY4,lX8,lY8,lResult;\n        lX8 = (lX & 0x80000000);\n        lY8 = (lY & 0x80000000);\n        lX4 = (lX & 0x40000000);\n        lY4 = (lY & 0x40000000);\n        lResult = (lX & 0x3FFFFFFF)+(lY & 0x3FFFFFFF);\n        if (lX4 & lY4) {\n            return (lResult ^ 0x80000000 ^ lX8 ^ lY8);\n        }\n        if (lX4 | lY4) {\n            if (lResult & 0x40000000) {\n                return (lResult ^ 0xC0000000 ^ lX8 ^ lY8);\n            } else {\n                return (lResult ^ 0x40000000 ^ lX8 ^ lY8);\n            }\n        } else {\n            return (lResult ^ lX8 ^ lY8);\n        }\n    };\n\n    var _F = function (x,y,z) { return (x & y) | ((~x) & z); };\n    var _G = function (x,y,z) { return (x & z) | (y & (~z)); };\n    var _H = function (x,y,z) { return (x ^ y ^ z); };\n    var _I = function (x,y,z) { return (y ^ (x | (~z))); };\n\n    var _FF = function (a,b,c,d,x,s,ac) {\n        a = addUnsigned(a, addUnsigned(addUnsigned(_F(b, c, d), x), ac));\n        return addUnsigned(rotateLeft(a, s), b);\n    };\n\n    var _GG = function (a,b,c,d,x,s,ac) {\n        a = addUnsigned(a, addUnsigned(addUnsigned(_G(b, c, d), x), ac));\n        return addUnsigned(rotateLeft(a, s), b);\n    };\n\n    var _HH = function (a,b,c,d,x,s,ac) {\n        a = addUnsigned(a, addUnsigned(addUnsigned(_H(b, c, d), x), ac));\n        return addUnsigned(rotateLeft(a, s), b);\n    };\n\n    var _II = function (a,b,c,d,x,s,ac) {\n        a = addUnsigned(a, addUnsigned(addUnsigned(_I(b, c, d), x), ac));\n        return addUnsigned(rotateLeft(a, s), b);\n    };\n\n    var convertToWordArray = function (str) {\n        var lWordCount;\n        var lMessageLength = str.length;\n        var lNumberOfWords_temp1=lMessageLength + 8;\n        var lNumberOfWords_temp2=(lNumberOfWords_temp1-(lNumberOfWords_temp1 % 64))/64;\n        var lNumberOfWords = (lNumberOfWords_temp2+1)*16;\n        var lWordArray=new Array(lNumberOfWords-1);\n        var lBytePosition = 0;\n        var lByteCount = 0;\n        while ( lByteCount < lMessageLength ) {\n            lWordCount = (lByteCount-(lByteCount % 4))/4;\n            lBytePosition = (lByteCount % 4)*8;\n            lWordArray[lWordCount] = (lWordArray[lWordCount] | (str.charCodeAt(lByteCount)<<lBytePosition));\n            lByteCount++;\n        }\n        lWordCount = (lByteCount-(lByteCount % 4))/4;\n        lBytePosition = (lByteCount % 4)*8;\n        lWordArray[lWordCount] = lWordArray[lWordCount] | (0x80<<lBytePosition);\n        lWordArray[lNumberOfWords-2] = lMessageLength<<3;\n        lWordArray[lNumberOfWords-1] = lMessageLength>>>29;\n        return lWordArray;\n    };\n\n    var wordToHex = function (lValue) {\n        var wordToHexValue=\"\",wordToHexValue_temp=\"\",lByte,lCount;\n        for (lCount = 0;lCount<=3;lCount++) {\n            lByte = (lValue>>>(lCount*8)) & 255;\n            wordToHexValue_temp = \"0\" + lByte.toString(16);\n            wordToHexValue = wordToHexValue + wordToHexValue_temp.substr(wordToHexValue_temp.length-2,2);\n        }\n        return wordToHexValue;\n    };\n\n    var x=[],\n        k,AA,BB,CC,DD,a,b,c,d,\n        S11=7, S12=12, S13=17, S14=22,\n        S21=5, S22=9 , S23=14, S24=20,\n        S31=4, S32=11, S33=16, S34=23,\n        S41=6, S42=10, S43=15, S44=21;\n\n    str = this.utf8_encode(str);\n    x = convertToWordArray(str);\n    a = 0x67452301; b = 0xEFCDAB89; c = 0x98BADCFE; d = 0x10325476;\n    \n    xl = x.length;\n    for (k=0;k<xl;k+=16) {\n        AA=a; BB=b; CC=c; DD=d;\n        a=_FF(a,b,c,d,x[k+0], S11,0xD76AA478);\n        d=_FF(d,a,b,c,x[k+1], S12,0xE8C7B756);\n        c=_FF(c,d,a,b,x[k+2], S13,0x242070DB);\n        b=_FF(b,c,d,a,x[k+3], S14,0xC1BDCEEE);\n        a=_FF(a,b,c,d,x[k+4], S11,0xF57C0FAF);\n        d=_FF(d,a,b,c,x[k+5], S12,0x4787C62A);\n        c=_FF(c,d,a,b,x[k+6], S13,0xA8304613);\n        b=_FF(b,c,d,a,x[k+7], S14,0xFD469501);\n        a=_FF(a,b,c,d,x[k+8], S11,0x698098D8);\n        d=_FF(d,a,b,c,x[k+9], S12,0x8B44F7AF);\n        c=_FF(c,d,a,b,x[k+10],S13,0xFFFF5BB1);\n        b=_FF(b,c,d,a,x[k+11],S14,0x895CD7BE);\n        a=_FF(a,b,c,d,x[k+12],S11,0x6B901122);\n        d=_FF(d,a,b,c,x[k+13],S12,0xFD987193);\n        c=_FF(c,d,a,b,x[k+14],S13,0xA679438E);\n        b=_FF(b,c,d,a,x[k+15],S14,0x49B40821);\n        a=_GG(a,b,c,d,x[k+1], S21,0xF61E2562);\n        d=_GG(d,a,b,c,x[k+6], S22,0xC040B340);\n        c=_GG(c,d,a,b,x[k+11],S23,0x265E5A51);\n        b=_GG(b,c,d,a,x[k+0], S24,0xE9B6C7AA);\n        a=_GG(a,b,c,d,x[k+5], S21,0xD62F105D);\n        d=_GG(d,a,b,c,x[k+10],S22,0x2441453);\n        c=_GG(c,d,a,b,x[k+15],S23,0xD8A1E681);\n        b=_GG(b,c,d,a,x[k+4], S24,0xE7D3FBC8);\n        a=_GG(a,b,c,d,x[k+9], S21,0x21E1CDE6);\n        d=_GG(d,a,b,c,x[k+14],S22,0xC33707D6);\n        c=_GG(c,d,a,b,x[k+3], S23,0xF4D50D87);\n        b=_GG(b,c,d,a,x[k+8], S24,0x455A14ED);\n        a=_GG(a,b,c,d,x[k+13],S21,0xA9E3E905);\n        d=_GG(d,a,b,c,x[k+2], S22,0xFCEFA3F8);\n        c=_GG(c,d,a,b,x[k+7], S23,0x676F02D9);\n        b=_GG(b,c,d,a,x[k+12],S24,0x8D2A4C8A);\n        a=_HH(a,b,c,d,x[k+5], S31,0xFFFA3942);\n        d=_HH(d,a,b,c,x[k+8], S32,0x8771F681);\n        c=_HH(c,d,a,b,x[k+11],S33,0x6D9D6122);\n        b=_HH(b,c,d,a,x[k+14],S34,0xFDE5380C);\n        a=_HH(a,b,c,d,x[k+1], S31,0xA4BEEA44);\n        d=_HH(d,a,b,c,x[k+4], S32,0x4BDECFA9);\n        c=_HH(c,d,a,b,x[k+7], S33,0xF6BB4B60);\n        b=_HH(b,c,d,a,x[k+10],S34,0xBEBFBC70);\n        a=_HH(a,b,c,d,x[k+13],S31,0x289B7EC6);\n        d=_HH(d,a,b,c,x[k+0], S32,0xEAA127FA);\n        c=_HH(c,d,a,b,x[k+3], S33,0xD4EF3085);\n        b=_HH(b,c,d,a,x[k+6], S34,0x4881D05);\n        a=_HH(a,b,c,d,x[k+9], S31,0xD9D4D039);\n        d=_HH(d,a,b,c,x[k+12],S32,0xE6DB99E5);\n        c=_HH(c,d,a,b,x[k+15],S33,0x1FA27CF8);\n        b=_HH(b,c,d,a,x[k+2], S34,0xC4AC5665);\n        a=_II(a,b,c,d,x[k+0], S41,0xF4292244);\n        d=_II(d,a,b,c,x[k+7], S42,0x432AFF97);\n        c=_II(c,d,a,b,x[k+14],S43,0xAB9423A7);\n        b=_II(b,c,d,a,x[k+5], S44,0xFC93A039);\n        a=_II(a,b,c,d,x[k+12],S41,0x655B59C3);\n        d=_II(d,a,b,c,x[k+3], S42,0x8F0CCC92);\n        c=_II(c,d,a,b,x[k+10],S43,0xFFEFF47D);\n        b=_II(b,c,d,a,x[k+1], S44,0x85845DD1);\n        a=_II(a,b,c,d,x[k+8], S41,0x6FA87E4F);\n        d=_II(d,a,b,c,x[k+15],S42,0xFE2CE6E0);\n        c=_II(c,d,a,b,x[k+6], S43,0xA3014314);\n        b=_II(b,c,d,a,x[k+13],S44,0x4E0811A1);\n        a=_II(a,b,c,d,x[k+4], S41,0xF7537E82);\n        d=_II(d,a,b,c,x[k+11],S42,0xBD3AF235);\n        c=_II(c,d,a,b,x[k+2], S43,0x2AD7D2BB);\n        b=_II(b,c,d,a,x[k+9], S44,0xEB86D391);\n        a=addUnsigned(a,AA);\n        b=addUnsigned(b,BB);\n        c=addUnsigned(c,CC);\n        d=addUnsigned(d,DD);\n    }\n\n    var temp = wordToHex(a)+wordToHex(b)+wordToHex(c)+wordToHex(d);\n\n    return temp.toLowerCase();\n}\n\nfunction utf8_encode ( argString ) {\n    // Encodes an ISO-8859-1 string to UTF-8  \n    // \n    // version: 909.322\n    // discuss at: http://phpjs.org/functions/utf8_encode\n    // +   original by: Webtoolkit.info (http://www.webtoolkit.info/)\n    // +   improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n    // +   improved by: sowberry\n    // +    tweaked by: Jack\n    // +   bugfixed by: Onno Marsman\n    // +   improved by: Yves Sucaet\n    // +   bugfixed by: Onno Marsman\n    // +   bugfixed by: Ulrich\n    // *     example 1: utf8_encode('Kevin van Zonneveld');\n    // *     returns 1: 'Kevin van Zonneveld'\n    var string = (argString+''); // .replace(/\\r\\n/g, \"\\n\").replace(/\\r/g, \"\\n\");\n\n    var utftext = \"\";\n    var start, end;\n    var stringl = 0;\n\n    start = end = 0;\n    stringl = string.length;\n    for (var n = 0; n < stringl; n++) {\n        var c1 = string.charCodeAt(n);\n        var enc = null;\n\n        if (c1 < 128) {\n            end++;\n        } else if (c1 > 127 && c1 < 2048) {\n            enc = String.fromCharCode((c1 >> 6) | 192) + String.fromCharCode((c1 & 63) | 128);\n        } else {\n            enc = String.fromCharCode((c1 >> 12) | 224) + String.fromCharCode(((c1 >> 6) & 63) | 128) + String.fromCharCode((c1 & 63) | 128);\n        }\n        if (enc !== null) {\n            if (end > start) {\n                utftext += string.substring(start, end);\n            }\n            utftext += enc;\n            start = end = n+1;\n        }\n    }\n\n    if (end > start) {\n        utftext += string.substring(start, string.length);\n    }\n\n    return utftext;\n}\n\nfunction getTime(offset)\n{\n    var t = (new Date()).getTime();\n    t = t / 1000 + offset;\n    return t;\n}\n\nfunction random()\n{\n    var r = Math.floor(Math.random() * 901 + 100 );\n    return r;\n}\n\nvar loginWindow       = null;\nvar logoutWindow      = null;\nvar shareWindow       = null;\nvar permWindow        = null;\nvar wallWindow        = null;\nvar refreshWindow     = null;\nvar postLikeWindow    = null;\nvar postMessageWindow = null;\nvar addpermWindow     = null;\nvar bubbleWindow = null;\nvar extra = \"button_url_root=\" + encodeURIComponent(\"https://s3.amazonaws.com/com.alexa.toolbar/alexa9-prod/buttons\");\nfunction minize(url)\n{\n  if (url.indexOf(\"?\") != -1)\n    var realUrl = url + \"&FBAPI=d5b19dd69490124cb63c0dde25d6d695\";\n  else\n    var realUrl = url + \"?FBAPI=d5b19dd69490124cb63c0dde25d6d695\";\n\n  return \"http://www.alexa.com/login/miniframe?resource=\" + encodeURIComponent(realUrl) + \"&\" + extra;\n}\nvar alexaLoginUrl     = minize(\"http://www.alexa.com/data/socialpost/facebook-login.html\");\nvar alexaLogoutUrl    = minize(\"http://www.alexa.com/data/socialpost/facebook-logout.html\");\nvar alexaRefreshUrl   = minize(\"http://www.alexa.com/data/socialpost/facebook-readstream.html\");\nvar alexaWallUrl      = minize(\"http://www.alexa.com/data/socialpost/facebook-wall.html\");\nvar alexaLikeUrl      = minize(\"http://www.alexa.com/data/socialpost/facebook-postLike.html\");\nvar alexaMessageUrl   = minize(\"http://www.alexa.com/data/socialpost/facebook-postMessage.html\");\nvar alexaPostUrl      = \"http://www.facebook.com/sharer.php?u=__ENCODED__URL__PLACEHOLDER__\";\nvar globalObj         = {\n  \"uid\"         : null,\n  \"profile\"     : {\"first_name\": null, \"last_name\": null, \"pic_square\" : null, \"profile_url\": null},\n  \"permission\"  : {\"read_stream\" : false, \"publish_stream\": false},\n  \"renderMenu\"  : renderMenu,\n  \"loggedOut\"   : loggedOut,\n  \"loadStream\"  : loadStream,\n  \"loadFacebook\": loadFacebook,\n  \"share\"       : facebookShare,\n  \"loadStreamF\" :loadFacebook\n  };\n\nvar loggedIn = false;\nvar contacted = false;\nvar hasMenu = false;\nvar spinner = 0;\n\nfunction saveSessionState(key, value)\n{\n  if (Alexa.storage.saveSessionState)\n    return Alexa.storage.saveSessionState(key, value);\n  else\n    return Alexa.storage.saveClientState(key, value);\n}\n\nfunction readSessionState(key)\n{\n  if (Alexa.storage.readSessionState)\n    return Alexa.storage.readSessionState(key);\n  else\n    return Alexa.storage.readClientState(key);\n}\n\n\nfunction loadStream(obj)\n{\n  if (typeof Alexa.tools.JSON != 'undefined')\n  {\n    var value = Alexa.tools.JSON.encode(obj);\n    Alexa.storage.saveClientState(\"updates\", value);\n    onFacebookUpdate(\"updates\", value);\n  }\n  else\n  {\n    // Fall-through for old clients\n    loadUpdate(obj);\n  }\n}\n\nfunction onFacebookUpdate(key, value)\n{\n  if (!value)\n  {\n    loggedOut();\n    return;\n  }\n  if (typeof Alexa.tools.JSON != 'undefined')\n  {\n    var obj = Alexa.tools.JSON.decode(value);\n    loadUpdate(obj);\n  }\n}\n\nfunction loadUpdate(obj)\n{\n  if ( loginWindow )\n    loginWindow.close();\n\n  if (!obj || !obj[\"posts\"])\n  {\n    Trace(\"hereit is called\");\n    loggedOut();\n    return;\n  }\n  var isNew = Alexa.storage.readClientState(\"new\");\n  var tooltip = \"Share on Facebook\";\n  var updated = (isNew == \"1\" ? true : false);\n  if (Alexa.button.properties.tooltip != tooltip || Alexa.button.properties.updated != updated)\n  {\n    Alexa.button.properties.tooltip = tooltip;\n    Alexa.button.properties.updated = updated;\n    Alexa.button.update();\n  }\n  loggedIn = true;\n  globalObj[\"permission\"][\"read_stream\"] = true;\n  renderMenu();\n  var profiles    = obj[\"profiles\"];\n  var posts       = obj[\"posts\"];\n  if (bubbleWindow) bubbleWindow.hide();\n  Alexa.button.images.clear();\n  spinner = spinner + 1;\n\n  var url = \"https://s3.amazonaws.com/com.alexa.toolbar/alexa9-prod/buttons/facebook/facebook_showprofile.html\";\n  var all_text = [];\n  var bubbleId = -1;\n  for (var i = 0; i < posts.length && i < 3; i++)\n  {\n      var post = posts[i];\n\n      var message     = post[\"message\"];\n      var profile     = getProfile(post[\"actor_id\"], profiles);\n      var pic         = profile[\"pic_square\"];\n      var like        = post[\"likes\"];\n      var post_id     = post[\"post_id\"];\n      var comments    = post[\"comments\"];\n      var attachment  = post[\"attachment\"];\n      var permalink   = post[\"permalink\"];\n      for(var j = 0; j < comments[\"comment_list\"].length && j < 3; ++j)\n      {\n        comments[\"comment_list\"][j][\"time\"] = parseTime(comments[\"comment_list\"][j][\"time\"]);\n        comments[\"comment_list\"][j][\"fromid\"] = getProfile(comments[\"comment_list\"][j][\"fromid\"], profiles);\n      }\n\n      var description = \"\";\n      if (post[\"attachment\"] && post[\"attachment\"][\"description\"])\n          description = post[\"attachment\"][\"description\"]; \n\n      var tString = parseTime(post[\"created_time\"]);\n\n      (function () {\n        var obj = {\"owner\"       : globalObj[\"profile\"],\n                   \"profile\"     : profile,\n                   \"message\"     : message,\n                   \"permalink\"   : permalink,\n                   \"attachment\"  : attachment,\n                   \"permission\"  : globalObj[\"permission\"],\n                   \"post_id\"     : post_id,\n                   \"time\"        : tString,\n                   \"description\" : description,\n                   \"like\"        : like,\n                   \"comments\"    : comments,\n                   \"postLike\"    : postLike,\n                   \"postMessage\" : postMessage,\n                   \"grantPerm\"   : addwritepermission};\n         var id = i;\n         var features = 'transparent,width=560,height=600,left=3,top=-1,imageOrigin=' + i;\n         var events = {\n           click: function(event)\n           {\n             Alexa.storage.saveClientState(\"new\", \"0\");\n             if (!hasSaveClientStateListener && Alexa.button.properties.updated)\n             {\n               Alexa.button.properties.updated = false;\n               Alexa.button.update();\n             }\n             bubbleWindow = Alexa.browser.navigate(url, 'newDialog', features, obj, event);\n             bubbleId = id;\n           },\n           mouseover: function(event)\n           {\n             if (!bubbleWindow || !bubbleWindow.isVisible() || bubbleId == id)\n               return;\n             Alexa.storage.saveClientState(\"new\", \"0\");\n             if (!hasSaveClientStateListener && Alexa.button.properties.updated)\n             {\n               Alexa.button.properties.updated = false;\n               Alexa.button.update();\n             }\n             bubbleWindow = Alexa.browser.navigate(url, 'newDialog', 'transparent,width=400,height=300,left=3,top=-1', obj, event);\n             bubbleId = id;\n           }\n         }\n         Alexa.button.images.add({\n           src: pic,\n           'class': \"alxtb2ff_image_button\",\n           tooltiptext: profile[\"name\"] + \" posted \" + tString + \". Click to read...\",\n           height: \"21\",\n           width: \"21\",\n           style:\"margin-left: 3px; cursor: pointer\"\n         }, events);\n      })();\n\n      all_text.push(pic);\n      all_text.push(profile[\"name\"]);\n      all_text.push(message);\n  }\n  var new_post_hash = md5(all_text.join(\"\\n\"));\n  var old_post_hash = Alexa.storage.readClientState(\"post_hash\");\n  Alexa.storage.saveClientState(\"post_hash\", new_post_hash);\n  if (new_post_hash != old_post_hash)\n  {\n     Alexa.storage.saveClientState(\"new\", \"1\");\n     if (!hasSaveClientStateListener && !Alexa.button.properties.updated)\n     {\n       Alexa.button.properties.updated = true;\n       Alexa.button.update();\n     }\n  }\n}\n\n\nfunction postMessage(comment, post_id, cb, ecb)\n{\n  if (postMessageWindow)\n      postMessageWindow.close();\n    \n  var callbackObj = {\n    globalObj : globalObj,\n    post_id   : post_id,\n    comment   : comment,\n    cb        : cb,\n    ecb       : ecb\n  };\n    \n  postMessageWindow = openUrl(alexaMessageUrl, [], \"width=800,height=600,close=yes,hidden\", \"newDialog\", callbackObj);  \n}\n\nfunction postLike(like, post_id, cb, ecb)\n{\n    //Trace(\"change like\");\n    \n    if (postLikeWindow)\n      postLikeWindow.close();\n    \n    var callbackObj = {\n      globalObj : globalObj,\n      post_id   : post_id,\n      like      : like,\n      cb        : cb,\n      ecb       : ecb\n    };\n    \n    postLikeWindow = openUrl(alexaLikeUrl, [], \"width=800,height=600,close=yes,hidden\", \"newDialog\", callbackObj);  \n}\n\nfunction getProfile(id, profiles)\n{\n    for(var i = 0; i < profiles.length; i++)\n    {\n        var profile = profiles[i];\n\n        if (profile[\"id\"] == id)\n            return profile; \n    }\n    return null;\n}\n\nfunction parseTime(timein)\n{\n  var d = Math.round((new Date()).getTime()/1000) - Number(timein);\n  \n  var tString = \"\";\n  if(d <= 60)\n      tString = \"1 min ago\";\n  else if (d < 3600)\n      tString = Math.floor(d / 60) + \" mins ago\";\n  else if (d < 7200)\n      tString = \"1 hour ago\";\n  else if (d < 86400)\n      tString = Math.floor(d / 3600) + \" hours ago\";\n  else if (d < 86400 * 2)\n      tString = \"1 day ago\";\n  else if (d < 86400 * 31)\n      tString = Math.floor(d / 86400) + \" days ago\";\n  else if (d < 86400 * 2 * 30)\n      tString = \"1 month ago\";\n  else\n      tString = Math.floor(d / (86400 * 30)) + \" months ago\";\n      \n  return tString;\n}\n\n\nfunction renderMenu()\n{\n  if (loggedIn && !hasMenu)\n  {\n    hasMenu = true;\n    Alexa.button.menu.create();\n    Alexa.button.menu.clear();\n    Alexa.button.menu.addCallbackItem(\"Share\", facebookShare);\n    Alexa.button.menu.addCallbackItem(\"Refresh\", loadFacebook);\n    if ( globalObj[\"permission\"] && !globalObj[\"permission\"][\"read_stream\"])\n      Alexa.button.menu.addCallbackItem(\"Grant Permission\", addreadpermission);\n    Alexa.button.menu.addCallbackItem(\"My Wall\", gotoMyWall);\n    Alexa.button.menu.addSeparator();\n    Alexa.button.menu.addCallbackItem(\"Logout\", logoutFacebook);\n\n    Alexa.events.addPopupShowingListener(function(event)\n    {\n      Alexa.storage.saveClientState(\"new\", \"0\");\n    });\n  }\n}\n\nfunction checkGlobal()\n{\n  Trace(\"uid:\" + globalObj[\"uid\"]);\n  Trace(\"profile:\" + globalObj[\"profile\"][\"first_name\"]);\n  Trace(\"profile:\" + globalObj[\"profile\"][\"last_name\"]);\n  Trace(\"profile:\" + globalObj[\"profile\"][\"pic_square\"]);\n  Trace(\"profile:\" + globalObj[\"profile\"][\"profile_url\"]);\n\n  Trace(\"permission:\" + globalObj[\"permission\"][\"read_stream\"]);\n  Trace(\"permission:\" + globalObj[\"permission\"][\"publish_stream\"]);\n}\n\nfunction addreadpermission()\n{\n  addpermission(\"read_stream\");\n}\n\nfunction addwritepermission()\n{\n  addpermission(\"publish_stream\");\n}\n\nfunction addpermission(permission)\n{\n    var next_url = minize(\"http://www.alexa.com/data/socialpost/facebook-finished.html?permissions=xxRESULTTOKENxx\");\n    var facebook_url = \"https://www.facebook.com/connect/prompt_permissions.php?api_key=d5b19dd69490124cb63c0dde25d6d695&v=1.0&next=\" + encodeURIComponent(next_url) + \"&display=popup&ext_perm=\" + permission;\n    var url = \"http://www.alexa.com/login/miniframe?resource=\" + encodeURIComponent(facebook_url) + \"&\" + extra;\n    if ( addpermWindow && !addpermWindow.isClosed() )\n      addpermWindow.close();\n    addpermWindow = openUrl(url, [], \"width=600,height=600,close=yes\", \"newDialog\", globalObj);\n}\n\nfunction loggedOut()\n{\n  Trace(\"loggedOut is called\");\n  Alexa.storage.saveClientState(\"updates\", \"\");\n  Alexa.storage.saveClientState(\"new\", \"0\");\n  saveSessionState(\"refresh_time\", 0);\n  if (loggedIn)\n  {\n    Alexa.button.menu.destroy();\n    globalObj[\"uid\"]        = null;\n    globalObj[\"profile\"][\"first_name\"] = null;\n    globalObj[\"profile\"][\"last_name\"] = null;\n    globalObj[\"profile\"][\"pic_square\"] = null;\n    globalObj[\"profile\"][\"profile_url\"] = null;\n    globalObj[\"permission\"][\"read_stream\"] = false;\n    globalObj[\"permission\"][\"publish_stream\"] = false;\n    if (bubbleWindow) bubbleWindow.close();\n    Alexa.button.images.clear();\n    spinner = spinner + 1;\n    var tooltip = \"Login to Facebook\";\n    if (Alexa.button.properties.tooltip != tooltip || Alexa.button.properties.updated)\n    {\n      Alexa.button.properties.tooltip = tooltip;\n      Alexa.button.properties.updated = false;\n      Alexa.button.update();\n    }\n    loggedIn = false;\n    hasMenu = false;\n  }\n}\n\nfunction facebookShare()\n{\n  if ( shareWindow)\n    shareWindow.close();\n  shareWindow= openUrl(alexaPostUrl, [], \"width=800,height=600,close=yes\", \"newDialog\", null);\n}\n\nfunction addSpinner()\n{\n  if (bubbleWindow) bubbleWindow.hide();\n  Alexa.button.images.clear();\n  Alexa.button.images.add({src: \"https://s3.amazonaws.com/com.alexa.toolbar/alexa9-prod/buttons/facebook/spinner.gif\", 'class': \"alxtb2ff_image_button\", tooltiptext: \"Loading...\", height: \"16\", width: \"16\", style:\"margin-left: 3px\"});\n  spinner = spinner + 1;\n  var mySpinner = spinner;\n  setTimeout(function()\n  {\n    if (spinner == mySpinner)\n    {\n      if (bubbleWindow) bubbleWindow.hide();\n      Alexa.button.images.clear();\n    }\n  }, 10000);\n}\n\nfunction loadFacebook(background)\n{\n  features = \"width=800,height=600,close=yes,hidden\";\n  if (background)\n  {\n    features = features + \",background\";\n  }\n\n  if (background != 1)\n  {\n    addSpinner();\n  }\n\n  // Bug 4064: Don't do background loads while the user is typing a comment\n  if (background != 1 || !bubbleWindow || !bubbleWindow.isVisible())\n  {\n    if (refreshWindow)\n      refreshWindow.close();\n\n    var last = readSessionState(\"refresh_time\");\n    Trace(\"last: \" + last);\n    if (!contacted && !Alexa.storage.saveSessionState)\n    {\n      Trace(\"resetting last\");\n      // Cache might be invalidated by browser restart.\n      // Ignore cache just to be safe\n      last = 0;\n    }\n    var updates = Alexa.storage.readClientState(\"updates\");\n    var now = new Date();\n    var cached = (parseInt(last, 10) + 5*60*1000 > now.getTime());\n    if (background == 1 && cached && updates)\n    {\n      onFacebookUpdate(\"updates\", updates);\n    }\n    if (background != 1 || !cached)\n    {\n      contacted = true;\n      saveSessionState(\"refresh_time\", now.getTime());\n      refreshWindow= openUrl(alexaRefreshUrl, [], features, \"newDialog\", globalObj);\n    }\n  }\n}\n\nfunction gotoMyWall()\n{\n  if (wallWindow)\n    wallWindow.close();\n  wallWindow= openUrl(alexaWallUrl, [], \"width=800,height=600,close=yes,hidden\", \"newDialog\", globalObj);\n}\n\nfunction logoutFacebook()\n{\n  addSpinner();\n  if (logoutWindow)\n    logoutWindow.close();\n  logoutWindow= openUrl(alexaLogoutUrl, [], \"width=800,height=600,close=yes,hidden\", \"newDialog\", globalObj);\n}\n\nfunction openUrl(callUrl, params, winPro, openOption, cbObj) {\n    Trace(\"Opening \" + callUrl);\n    paraString = \"\";\n\n    for (var i = 0; i < params.length; i++) {\n        var key     = encodeURIComponent(params[i][0]);\n        var value   = encodeURIComponent(params[i][1]);\n        paraString  += (key + \"=\" + value + \"&\");\n    }\n\n\n    if (callUrl.indexOf(\"?\") != -1)\n        var realUrl = callUrl + \"&FBAPI=d5b19dd69490124cb63c0dde25d6d695\";\n    else\n        var realUrl = callUrl + \"?FBAPI=d5b19dd69490124cb63c0dde25d6d695\";\n\n    return Alexa.browser.navigate(realUrl, openOption, winPro, cbObj);\n}\n\n\n\nfunction onLeftClick(event) {\n   Alexa.events.preventDefault(event);\n   if (loggedIn)\n   {\n      facebookShare();\n   }\n   else\n   {\n      addSpinner();\n      var url = minize(\"http://www.alexa.com/data/socialpost/facebook-login.html\");\n      if ( loginWindow )\n        loginWindow.close();\n      loginWindow = openUrl(url, [], \"width=800,height=600,close=yes,hidden\", \"newDialog\", globalObj);\n   }\n}\n\nAlexa.events.addLeftClickListener(onLeftClick); \nvar hasSaveClientStateListener = false;\nif (typeof Alexa.events.addSaveClientStateListener != 'undefined')\n{\n  Alexa.events.addSaveClientStateListener(\"updates\", onFacebookUpdate);\n  Alexa.events.addSaveClientStateListener(\"new\",\n    function(key, value)\n    {\n      var updated = (value == \"1\" ? true : false);\n      if (Alexa.button.properties.updated != updated)\n      {\n        Alexa.button.properties.updated = updated;\n        Alexa.button.update();\n      }\n    }\n  );\n  hasSaveClientStateListener = true;\n}\nsetInterval(function() { loadFacebook(1) }, 1000 * 60 * 5);\nloadFacebook(1);\n\n\n\nvar TRACE = false;\nfunction Trace(message)\n{\n  if (TRACE)\n    Alexa.tools.trace(\"facebook-new: \" + message);\n}\n    ]]></javascript>\n  </button>\n</buttons>\n");
user_pref("extensions.alexa.active-buttons.facebook.url", "https://s3.amazonaws.com/com.alexa.toolbar/alexa9-prod/buttons/facebook/facebook.xml");
user_pref("extensions.alexa.active-buttons.facebook.version", "alxf-1.52");
user_pref("extensions.alexa.active-buttons.fb.storage.new", "0");
user_pref("extensions.alexa.active-buttons.fb.storage.updates", "");
user_pref("extensions.alexa.active-buttons.hs.rss.hash", "Cba6Ua6MksR2COspiDSvxQ==");
user_pref("extensions.alexa.active-buttons.hs.rss.hideHeadLine", false);
user_pref("extensions.alexa.active-buttons.hs.rss.items", "%5B%7B%22title%22%3A%22Best%20Picture%22%2C%22link%22%3A%22http%3A%2F%2Fwww.alexa.com%2Fwhatshot%3Fq%3Dbest%2Bpicture%22%7D%2C%7B%22title%22%3A%22CRM%22%2C%22link%22%3A%22http%3A%2F%2Fwww.alexa.com%2Fwhatshot%3Fq%3Dnyse%253Acrm%22%7D%2C%7B%22title%22%3A%22Oscar%20winners%22%2C%22link%22%3A%22http%3A%2F%2Fwww.alexa.com%2Fwhatshot%3Fq%3Doscar%2Bwinners%22%7D%2C%7B%22title%22%3A%22Natalie%20Portman%22%2C%22link%22%3A%22http%3A%2F%2Fwww.alexa.com%2Fwhatshot%3Fq%3Dnatalie%2Bportman%22%7D%2C%7B%22title%22%3A%22TMZ%22%2C%22link%22%3A%22http%3A%2F%2Fwww.alexa.com%2Fwhatshot%3Fq%3Dtmz%22%7D%2C%7B%22title%22%3A%22Black%20Swan%22%2C%22link%22%3A%22http%3A%2F%2Fwww.alexa.com%2Fwhatshot%3Fq%3Dblack%2Bswan%22%7D%2C%7B%22title%22%3A%22Hailee%20Steinfeld%22%2C%22link%22%3A%22http%3A%2F%2Fwww.alexa.com%2Fwhatshot%3Fq%3Dhailee%2Bsteinfeld%22%7D%2C%7B%22title%22%3A%22Mandy%20Moore%22%2C%22link%22%3A%22http%3A%2F%2Fwww.alexa.com%2Fwhatshot%3Fq%3Dmandy%2Bmoore%22%7D%2C%7B%22title%22%3A%22Oscar%20results%22%2C%22link%22%3A%22http%3A%2F%2Fwww.alexa.com%2Fwhatshot%3Fq%3Doscar%2Bresults%22%7D%2C%7B%22title%22%3A%22Sandra%20Bullock%22%2C%22link%22%3A%22http%3A%2F%2Fwww.alexa.com%2Fwhatshot%3Fq%3Dsandra%2Bbullock%22%7D%2C%7B%22title%22%3A%22Bank%20of%20America%22%2C%22link%22%3A%22http%3A%2F%2Fwww.alexa.com%2Fwhatshot%3Fq%3Dbank%2Bof%2Bamerica%22%7D%2C%7B%22title%22%3A%22Frank%20Buckles%22%2C%22link%22%3A%22http%3A%2F%2Fwww.alexa.com%2Fwhatshot%3Fq%3Dfrank%2Bbuckles%22%7D%2C%7B%22title%22%3A%22Howard%20Bryant%22%2C%22link%22%3A%22http%3A%2F%2Fwww.alexa.com%2Fwhatshot%3Fq%3Dhoward%2Bbryant%22%7D%2C%7B%22title%22%3A%22Michelle%20Williams%22%2C%22link%22%3A%22http%3A%2F%2Fwww.alexa.com%2Fwhatshot%3Fq%3Dmichelle%2Bwilliams%22%7D%2C%7B%22title%22%3A%22Born%20This%20Way%22%2C%22link%22%3A%22http%3A%2F%2Fwww.alexa.com%2Fwhatshot%3Fq%3Dborn%2Bthis%2Bway%22%7D%2C%7B%22title%22%3A%22Adwords%20keyword%20tool%22%2C%22link%22%3A%22http%3A%2F%2Fwww.alexa.com%2Fwhatshot%3Fq%3Dadwords%2Bkeyword%2Btool%22%7D%2C%7B%22title%22%3A%224chan%22%2C%22link%22%3A%22http%3A%2F%2Fwww.alexa.com%2Fwhatshot%3Fq%3D4chan%22%7D%2C%7B%22title%22%3A%22Corey%20Haim%22%2C%22link%22%3A%22http%3A%2F%2Fwww.alexa.com%2Fwhatshot%3Fq%3Dcorey%2Bhaim%22%7D%2C%7B%22title%22%3A%22John%20Galliano%22%2C%22link%22%3A%22http%3A%2F%2Fwww.alexa.com%2Fwhatshot%3Fq%3Djohn%2Bgalliano%22%7D%2C%7B%22title%22%3A%22Scarlett%20Johansson%22%2C%22link%22%3A%22http%3A%2F%2Fwww.alexa.com%2Fwhatshot%3Fq%3Dscarlett%2Bjohansson%22%7D%2C%7B%22title%22%3A%22Troy%20Murphy%22%2C%22link%22%3A%22http%3A%2F%2Fwww.alexa.com%2Fwhatshot%3Fq%3Dtroy%2Bmurphy%22%7D%2C%7B%22title%22%3A%22Dictionary%22%2C%22link%22%3A%22http%3A%2F%2Fwww.alexa.com%2Fwhatshot%3Fq%3Ddictionary%22%7D%2C%7B%22title%22%3A%22Google%20algorithm%20change%22%2C%22link%22%3A%22http%3A%2F%2Fwww.alexa.com%2Fwhatshot%3Fq%3Dgoogle%2Balgorithm%2Bchange%22%7D%2C%7B%22title%22%3A%22Palantir%22%2C%22link%22%3A%22http%3A%2F%2Fwww.alexa.com%2Fwhatshot%3Fq%3Dpalantir%22%7D%2C%7B%22title%22%3A%22Today%20Show%22%2C%22link%22%3A%22http%3A%2F%2Fwww.alexa.com%2Fwhatshot%3Fq%3Dtoday%2Bshow%22%7D%2C%7B%22title%22%3A%22NFL%20Combine%22%2C%22link%22%3A%22http%3A%2F%2Fwww.alexa.com%2Fwhatshot%3Fq%3Dnfl%2Bcombine%22%7D%2C%7B%22title%22%3A%22Starbucks%22%2C%22link%22%3A%22http%3A%2F%2Fwww.alexa.com%2Fwhatshot%3Fq%3Dstarbucks%22%7D%2C%7B%22title%22%3A%22NFLX%22%2C%22link%22%3A%22http%3A%2F%2Fwww.alexa.com%2Fwhatshot%3Fq%3Dnasdaq%253Anflx%22%7D%2C%7B%22title%22%3A%22Direct%20TV%22%2C%22link%22%3A%22http%3A%2F%2Fwww.alexa.com%2Fwhatshot%3Fq%3Ddirect%2Btv%22%7D%2C%7B%22title%22%3A%22Gwyneth%20Paltrow%22%2C%22link%22%3A%22http%3A%2F%2Fwww.alexa.com%2Fwhatshot%3Fq%3Dgwyneth%2Bpaltrow%22%7D%5D");
user_pref("extensions.alexa.active-buttons.hs.rss.time", "1298922315791");
user_pref("extensions.alexa.active-buttons.hu.rss.hash", "H20HNcH23XTyaQH5/KVXxA==");
user_pref("extensions.alexa.active-buttons.hu.rss.hideHeadLine", false);
user_pref("extensions.alexa.active-buttons.hu.rss.items", "%5B%7B%22title%22%3A%22Video%3A%20Ref%20tells%20Kobe%20Bryant%20to%20'make%20the%20shot'%22%2C%22link%22%3A%22http%3A%2F%2Fsports.yahoo.com%2Fnba%2Fblog%2Fball_dont_lie%2Fpost%2FVideo-Ref-tells-Kobe-Bryant-to-make-the-shot-%3Furn%3Dnba-327439%22%7D%2C%7B%22title%22%3A%22The%2083rd%20Annual%20Academy%20Awards%C2%AE%20on%20Yahoo!%20Movies%22%2C%22link%22%3A%22http%3A%2F%2Foscars.movies.yahoo.com%2Fphotos%2F153-2011-red-carpet-report-card%3Fnc%22%7D%2C%7B%22title%22%3A%22Oscars%3A%20The%20bomb%20heard%20round%20the%20Internet%20%E2%80%93%20The%20Marquee%20Blog%22%2C%22link%22%3A%22http%3A%2F%2Fmarquee.blogs.cnn.com%2F2011%2F02%2F28%2Foscars-the-bomb-heard-round-the-internet%2F%3Fhpt%3DC1%22%7D%2C%7B%22title%22%3A%22Charlie%20Sheen%20Demands%20%243%20Million%20Per%20Episode%22%2C%22link%22%3A%22http%3A%2F%2Fomg.yahoo.com%2Fblogs%2Fthefamous%2Fcharlie-sheen-demands-3-million-per-episode%2F739%3Fnc%22%7D%2C%7B%22title%22%3A%22'Wolf%20child'%20named%20world's%20hairiest%20girl%20delighted%20because%20it%20makes%20her%20popular%20at%20school%22%2C%22link%22%3A%22http%3A%2F%2Fwww.dailymail.co.uk%2Fnews%2Farticle-1361409%2FWolf-child-named-worlds-hairiest-girl-delighted-makes-popular-school.html%22%7D%2C%7B%22title%22%3A%22FOX%20News%20Reporter%20Gets%20Hit%20During%20Live%20Broadcast%20From%20Wisconsin%22%2C%22link%22%3A%22http%3A%2F%2Fwww.realclearpolitics.com%2Fvideo%2F2011%2F02%2F27%2Ffox_news_correspondent_gets_hit_during_live_broadcast_from_wisconsin.html%22%7D%2C%7B%22title%22%3A%22Charlie%20Sheen%20demands%2050%20percent%20raise%20for%20%E2%80%98Men%E2%80%99%22%2C%22link%22%3A%22http%3A%2F%2Ftoday.msnbc.msn.com%2Fid%2F41824830%2Fns%2Ftoday-entertainment%2F%22%7D%2C%7B%22title%22%3A%22Facebook%20Like%20button%20takes%20over%20Share%20button%22%2C%22link%22%3A%22http%3A%2F%2Fwww.cnn.com%2F2011%2FTECH%2Fsocial.media%2F02%2F28%2Ffacebook.like.button%2Findex.html%3Fhpt%3DT2%22%7D%2C%7B%22title%22%3A%22Oscars%20Best%20and%20Worst%22%2C%22link%22%3A%22http%3A%2F%2Fmovies.msn.com%2Facademy-awards%2Fbest-and-worst%2F%3Fgt1%3D28168%22%7D%2C%7B%22title%22%3A%22Capturing%20Profit%20With%20Ease%22%2C%22link%22%3A%22http%3A%2F%2Fprofitsiege.com%2Findexb.html%3Fhop%3Dhomejob4%22%7D%5D");
user_pref("extensions.alexa.active-buttons.hu.rss.time", "1298922315786");
user_pref("extensions.alexa.active-buttons.tw.storage.akey", "");
user_pref("extensions.alexa.active-buttons.tw.storage.atime", "");
user_pref("extensions.alexa.active-buttons.tw.storage.atoken", "");
user_pref("extensions.alexa.active-buttons.tw.storage.new", "0");
user_pref("extensions.alexa.active-buttons.tw.storage.rss_text", "");
user_pref("extensions.alexa.active-buttons.tw.storage.rss_time", "0");
user_pref("extensions.alexa.active-buttons.twitter", "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<buttons>\n  <title>Twitter</title>\n  <id>twitter</id>\n  <button>\n    <type>javascript</type>\n    <id>tw</id>\n    <imageType>icon</imageType>\n    <image><![CDATA[https://s3.amazonaws.com/com.alexa.toolbar/alexa9-prod/buttons/twitter/twitter.png]]></image>\n    <hoverImage><![CDATA[https://s3.amazonaws.com/com.alexa.toolbar/alexa9-prod/buttons/twitter/twitter-hover.png]]></hoverImage>\n    <updatedImage><![CDATA[https://s3.amazonaws.com/com.alexa.toolbar/alexa9-prod/buttons/twitter/twitter-new.png]]></updatedImage>\n    <updatedHoverImage><![CDATA[https://s3.amazonaws.com/com.alexa.toolbar/alexa9-prod/buttons/twitter/twitter-new-hover.png]]></updatedHoverImage>\n    <tooltip>Share on Twitter</tooltip>\n    <javascript>\n  <![CDATA[  \n       /*\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-1, as defined\n * in FIPS PUB 180-1\n * Version 2.1a Copyright Paul Johnston 2000 - 2002.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for details.\n */\n\n/*\n * Configurable variables. You may need to tweak these to be compatible with\n * the server-side, but the defaults work in most cases.\n */\nvar hexcase = 0;  /* hex output format. 0 - lowercase; 1 - uppercase        */\nvar b64pad  = \"\"; /* base-64 pad character. \"=\" for strict RFC compliance   */\nvar chrsz   = 8;  /* bits per input character. 8 - ASCII; 16 - Unicode      */\n\n/*\n * These are the functions you'll usually want to call\n * They take string arguments and return either hex or base-64 encoded strings\n */\nfunction hex_sha1(s){return binb2hex(core_sha1(str2binb(s),s.length * chrsz));}\nfunction b64_sha1(s){return binb2b64(core_sha1(str2binb(s),s.length * chrsz));}\nfunction str_sha1(s){return binb2str(core_sha1(str2binb(s),s.length * chrsz));}\nfunction hex_hmac_sha1(key, data){ return binb2hex(core_hmac_sha1(key, data));}\nfunction b64_hmac_sha1(key, data){ return binb2b64(core_hmac_sha1(key, data));}\nfunction str_hmac_sha1(key, data){ return binb2str(core_hmac_sha1(key, data));}\n\n/*\n * Perform a simple self-test to see if the VM is working\n */\nfunction sha1_vm_test()\n{\n  return hex_sha1(\"abc\") == \"a9993e364706816aba3e25717850c26c9cd0d89d\";\n}\n\n/*\n * Calculate the SHA-1 of an array of big-endian words, and a bit length\n */\nfunction core_sha1(x, len)\n{\n  /* append padding */\n  x[len >> 5] |= 0x80 << (24 - len % 32);\n  x[((len + 64 >> 9) << 4) + 15] = len;\n\n  var w = Array(80);\n  var a =  1732584193;\n  var b = -271733879;\n  var c = -1732584194;\n  var d =  271733878;\n  var e = -1009589776;\n\n  for(var i = 0; i < x.length; i += 16)\n  {\n    var olda = a;\n    var oldb = b;\n    var oldc = c;\n    var oldd = d;\n    var olde = e;\n\n    for(var j = 0; j < 80; j++)\n    {\n      if(j < 16) w[j] = x[i + j];\n      else w[j] = rol(w[j-3] ^ w[j-8] ^ w[j-14] ^ w[j-16], 1);\n      var t = safe_add(safe_add(rol(a, 5), sha1_ft(j, b, c, d)),\n                       safe_add(safe_add(e, w[j]), sha1_kt(j)));\n      e = d;\n      d = c;\n      c = rol(b, 30);\n      b = a;\n      a = t;\n    }\n\n    a = safe_add(a, olda);\n    b = safe_add(b, oldb);\n    c = safe_add(c, oldc);\n    d = safe_add(d, oldd);\n    e = safe_add(e, olde);\n  }\n  return Array(a, b, c, d, e);\n\n}\n\n/*\n * Perform the appropriate triplet combination function for the current\n * iteration\n */\nfunction sha1_ft(t, b, c, d)\n{\n  if(t < 20) return (b & c) | ((~b) & d);\n  if(t < 40) return b ^ c ^ d;\n  if(t < 60) return (b & c) | (b & d) | (c & d);\n  return b ^ c ^ d;\n}\n\n/*\n * Determine the appropriate additive constant for the current iteration\n */\nfunction sha1_kt(t)\n{\n  return (t < 20) ?  1518500249 : (t < 40) ?  1859775393 :\n         (t < 60) ? -1894007588 : -899497514;\n}\n\n/*\n * Calculate the HMAC-SHA1 of a key and some data\n */\nfunction core_hmac_sha1(key, data)\n{\n  var bkey = str2binb(key);\n  if(bkey.length > 16) bkey = core_sha1(bkey, key.length * chrsz);\n\n  var ipad = Array(16), opad = Array(16);\n  for(var i = 0; i < 16; i++)\n  {\n    ipad[i] = bkey[i] ^ 0x36363636;\n    opad[i] = bkey[i] ^ 0x5C5C5C5C;\n  }\n\n  var hash = core_sha1(ipad.concat(str2binb(data)), 512 + data.length * chrsz);\n  return core_sha1(opad.concat(hash), 512 + 160);\n}\n\n/*\n * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n * to work around bugs in some JS interpreters.\n */\nfunction safe_add(x, y)\n{\n  var lsw = (x & 0xFFFF) + (y & 0xFFFF);\n  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n  return (msw << 16) | (lsw & 0xFFFF);\n}\n\n/*\n * Bitwise rotate a 32-bit number to the left.\n */\nfunction rol(num, cnt)\n{\n  return (num << cnt) | (num >>> (32 - cnt));\n}\n\n/*\n * Convert an 8-bit or 16-bit string to an array of big-endian words\n * In 8-bit function, characters >255 have their hi-byte silently ignored.\n */\nfunction str2binb(str)\n{\n  var bin = Array();\n  var mask = (1 << chrsz) - 1;\n  for(var i = 0; i < str.length * chrsz; i += chrsz)\n    bin[i>>5] |= (str.charCodeAt(i / chrsz) & mask) << (32 - chrsz - i%32);\n  return bin;\n}\n\n/*\n * Convert an array of big-endian words to a string\n */\nfunction binb2str(bin)\n{\n  var str = \"\";\n  var mask = (1 << chrsz) - 1;\n  for(var i = 0; i < bin.length * 32; i += chrsz)\n    str += String.fromCharCode((bin[i>>5] >>> (32 - chrsz - i%32)) & mask);\n  return str;\n}\n\n/*\n * Convert an array of big-endian words to a hex string.\n */\nfunction binb2hex(binarray)\n{\n  var hex_tab = hexcase ? \"0123456789ABCDEF\" : \"0123456789abcdef\";\n  var str = \"\";\n  for(var i = 0; i < binarray.length * 4; i++)\n  {\n    str += hex_tab.charAt((binarray[i>>2] >> ((3 - i%4)*8+4)) & 0xF) +\n           hex_tab.charAt((binarray[i>>2] >> ((3 - i%4)*8  )) & 0xF);\n  }\n  return str;\n}\n\n/*\n * Convert an array of big-endian words to a base-64 string\n */\nfunction binb2b64(binarray)\n{\n  var tab = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n  var str = \"\";\n  for(var i = 0; i < binarray.length * 4; i += 3)\n  {\n    var triplet = (((binarray[i   >> 2] >> 8 * (3 -  i   %4)) & 0xFF) << 16)\n                | (((binarray[i+1 >> 2] >> 8 * (3 - (i+1)%4)) & 0xFF) << 8 )\n                |  ((binarray[i+2 >> 2] >> 8 * (3 - (i+2)%4)) & 0xFF);\n    for(var j = 0; j < 4; j++)\n    {\n      if(i * 8 + j * 6 > binarray.length * 32) str += b64pad;\n      else str += tab.charAt((triplet >> 6*(3-j)) & 0x3F);\n    }\n  }\n  return str;\n}\nTrace(\"Liangnan is a good guy.\"); \n    \n/*\n * Copyright 2008 Netflix, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* Here's some JavaScript software for implementing OAuth.\n\n   This isn't as useful as you might hope.  OAuth is based around\n   allowing tools and websites to talk to each other.  However,\n   JavaScript running in web browsers is hampered by security\n   restrictions that prevent code running on one website from\n   accessing data stored or served on another.\n\n   Before you start hacking, make sure you understand the limitations\n   posed by cross-domain XMLHttpRequest.\n\n   On the bright side, some platforms use JavaScript as their\n   language, but enable the programmer to access other web sites.\n   Examples include Google Gadgets, and Microsoft Vista Sidebar.\n   For those platforms, this library should come in handy.\n*/\n\n// The HMAC-SHA1 signature method calls b64_hmac_sha1, defined by\n// http://pajhome.org.uk/crypt/md5/sha1.js\n\n/* An OAuth message is represented as an object like this:\n   {method: \"GET\", action: \"http://server.com/path\", parameters: ...}\n\n   The parameters may be either a map {name: value, name2: value2}\n   or an Array of name-value pairs [[name, value], [name2, value2]].\n   The latter representation is more powerful: it supports parameters\n   in a specific sequence, or several parameters with the same name;\n   for example [[\"a\", 1], [\"b\", 2], [\"a\", 3]].\n\n   Parameter names and values are NOT percent-encoded in an object.\n   They must be encoded before transmission and decoded after reception.\n   For example, this message object:\n   {method: \"GET\", action: \"http://server/path\", parameters: {p: \"x y\"}}\n   ... can be transmitted as an HTTP request that begins:\n   GET /path?p=x%20y HTTP/1.0\n   (This isn't a valid OAuth request, since it lacks a signature etc.)\n   Note that the object \"x y\" is transmitted as x%20y.  To encode\n   parameters, you can call OAuth.addToURL, OAuth.formEncode or\n   OAuth.getAuthorization.\n\n   This message object model harmonizes with the browser object model for\n   input elements of an form, whose value property isn't percent encoded.\n   The browser encodes each value before transmitting it. For example,\n   see consumer.setInputs in example/consumer.js.\n */\n\n/* This script needs to know what time it is. By default, it uses the local\n   clock (new Date), which is apt to be inaccurate in browsers. To do\n   better, you can load this script from a URL whose query string contains\n   an oauth_timestamp parameter, whose value is a current Unix timestamp.\n   For example, when generating the enclosing document using PHP:\n\n   <script src=\"oauth.js?oauth_timestamp=<?=time()?>\" ...\n\n   Another option is to call OAuth.correctTimestamp with a Unix timestamp.\n */\n\nvar OAuth; if (OAuth == null) OAuth = {};\n\nOAuth.setProperties = function setProperties(into, from) {\n    if (into != null && from != null) {\n        for (var key in from) {\n            into[key] = from[key];\n        }\n    }\n    return into;\n}\n\nOAuth.setProperties(OAuth, // utility functions\n{\n    percentEncode: function percentEncode(s) {\n        if (s == null) {\n            return \"\";\n        }\n        if (s instanceof Array) {\n            var e = \"\";\n            for (var i = 0; i < s.length; ++s) {\n                if (e != \"\") e += '&';\n                e += OAuth.percentEncode(s[i]);\n            }\n            return e;\n        }\n        s = encodeURIComponent(s);\n        // Now replace the values which encodeURIComponent doesn't do\n        // encodeURIComponent ignores: - _ . ! ~ * ' ( )\n        // OAuth dictates the only ones you can ignore are: - _ . ~\n        // Source: http://developer.mozilla.org/en/docs/Core_JavaScript_1.5_Reference:Global_Functions:encodeURIComponent\n        s = s.replace(/\\!/g, \"%21\");\n        s = s.replace(/\\*/g, \"%2A\");\n        s = s.replace(/\\'/g, \"%27\");\n        s = s.replace(/\\(/g, \"%28\");\n        s = s.replace(/\\)/g, \"%29\");\n        return s;\n    }\n,\n    decodePercent: function decodePercent(s) {\n        if (s != null) {\n            // Handle application/x-www-form-urlencoded, which is defined by\n            // http://www.w3.org/TR/html4/interact/forms.html#h-17.13.4.1\n            s = s.replace(/\\+/g, \" \");\n        }\n        return decodeURIComponent(s);\n    }\n,\n    /** Convert the given parameters to an Array of name-value pairs. */\n    getParameterList: function getParameterList(parameters) {\n        if (parameters == null) {\n            return [];\n        }\n        if (typeof parameters != \"object\") {\n            return OAuth.decodeForm(parameters + \"\");\n        }\n        if (parameters instanceof Array) {\n            return parameters;\n        }\n        var list = [];\n        for (var p in parameters) {\n            list.push([p, parameters[p]]);\n        }\n        return list;\n    }\n,\n    /** Convert the given parameters to a map from name to value. */\n    getParameterMap: function getParameterMap(parameters) {\n        if (parameters == null) {\n            return {};\n        }\n        if (typeof parameters != \"object\") {\n            return OAuth.getParameterMap(OAuth.decodeForm(parameters + \"\"));\n        }\n        if (parameters instanceof Array) {\n            var map = {};\n            for (var p = 0; p < parameters.length; ++p) {\n                var key = parameters[p][0];\n                if (map[key] === undefined) { // first value wins\n                    map[key] = parameters[p][1];\n                }\n            }\n            return map;\n        }\n        return parameters;\n    }\n,\n    getParameter: function getParameter(parameters, name) {\n        if (parameters instanceof Array) {\n            for (var p = 0; p < parameters.length; ++p) {\n                if (parameters[p][0] == name) {\n                    return parameters[p][1]; // first value wins\n                }\n            }\n        } else {\n            return OAuth.getParameterMap(parameters)[name];\n        }\n        return null;\n    }\n,\n    formEncode: function formEncode(parameters) {\n        var form = \"\";\n        var list = OAuth.getParameterList(parameters);\n        for (var p = 0; p < list.length; ++p) {\n            var value = list[p][1];\n            if (value == null) value = \"\";\n            if (form != \"\") form += '&';\n            form += OAuth.percentEncode(list[p][0])\n              +'='+ OAuth.percentEncode(value);\n        }\n        return form;\n    }\n,\n    decodeForm: function decodeForm(form) {\n        var list = [];\n        var nvps = form.split('&');\n        for (var n = 0; n < nvps.length; ++n) {\n            var nvp = nvps[n];\n            if (nvp == \"\") {\n                continue;\n            }\n            var equals = nvp.indexOf('=');\n            var name;\n            var value;\n            if (equals < 0) {\n                name = OAuth.decodePercent(nvp);\n                value = null;\n            } else {\n                name = OAuth.decodePercent(nvp.substring(0, equals));\n                value = OAuth.decodePercent(nvp.substring(equals + 1));\n            }\n            list.push([name, value]);\n        }\n        return list;\n    }\n,\n    setParameter: function setParameter(message, name, value) {\n        var parameters = message.parameters;\n        if (parameters instanceof Array) {\n            for (var p = 0; p < parameters.length; ++p) {\n                if (parameters[p][0] == name) {\n                    if (value === undefined) {\n                        parameters.splice(p, 1);\n                    } else {\n                        parameters[p][1] = value;\n                        value = undefined;\n                    }\n                }\n            }\n            if (value !== undefined) {\n                parameters.push([name, value]);\n            }\n        } else {\n            parameters = OAuth.getParameterMap(parameters);\n            parameters[name] = value;\n            message.parameters = parameters;\n        }\n    }\n,\n    setParameters: function setParameters(message, parameters) {\n        var list = OAuth.getParameterList(parameters);\n        for (var i = 0; i < list.length; ++i) {\n            OAuth.setParameter(message, list[i][0], list[i][1]);\n        }\n    }\n,\n    /** Fill in parameters to help construct a request message.\n        This function doesn't fill in every parameter.\n        The accessor object should be like:\n        {consumerKey:'foo', consumerSecret:'bar', accessorSecret:'nurn', token:'krelm', tokenSecret:'blah'}\n        The accessorSecret property is optional.\n     */\n    completeRequest: function completeRequest(message, accessor) {\n        if (message.method == null) {\n            message.method = \"GET\";\n        }\n        var map = OAuth.getParameterMap(message.parameters);\n        if (map.oauth_consumer_key == null) {\n            OAuth.setParameter(message, \"oauth_consumer_key\", accessor.consumerKey || \"\");\n        }\n        if (map.oauth_token == null && accessor.token != null) {\n            OAuth.setParameter(message, \"oauth_token\", accessor.token);\n        }\n        if (map.oauth_version == null) {\n            OAuth.setParameter(message, \"oauth_version\", \"1.0\");\n        }\n        if (map.oauth_timestamp == null) {\n            OAuth.setParameter(message, \"oauth_timestamp\", OAuth.timestamp());\n        }\n        if (map.oauth_nonce == null) {\n            OAuth.setParameter(message, \"oauth_nonce\", OAuth.nonce(32));\n        }\n        OAuth.SignatureMethod.sign(message, accessor);\n    }\n,\n    setTimestampAndNonce: function setTimestampAndNonce(message) {\n        OAuth.setParameter(message, \"oauth_timestamp\", OAuth.timestamp());\n        OAuth.setParameter(message, \"oauth_nonce\", OAuth.nonce(32));\n    }\n,\n    addToURL: function addToURL(url, parameters) {\n        newURL = url;\n        if (parameters != null) {\n            var toAdd = OAuth.formEncode(parameters);\n            if (toAdd.length > 0) {\n                var q = url.indexOf('?');\n                if (q < 0) newURL += '?';\n                else       newURL += '&';\n                newURL += toAdd;\n            }\n        }\n        return newURL;\n    }\n,\n    /** Construct the value of the Authorization header for an HTTP request. */\n    getAuthorizationHeader: function getAuthorizationHeader(realm, parameters) {\n        var header = 'OAuth realm=\"' + OAuth.percentEncode(realm) + '\"';\n        var list = OAuth.getParameterList(parameters);\n        for (var p = 0; p < list.length; ++p) {\n            var parameter = list[p];\n            var name = parameter[0];\n            if (name.indexOf(\"oauth_\") == 0) {\n                header += ',' + OAuth.percentEncode(name) + '=\"' + OAuth.percentEncode(parameter[1]) + '\"';\n            }\n        }\n        return header;\n    }\n,\n    /** Correct the time using a parameter from the URL from which the last script was loaded. */\n    correctTimestampFromSrc: function correctTimestampFromSrc(parameterName) {\n        parameterName = parameterName || \"oauth_timestamp\";\n        var scripts = document.getElementsByTagName('script');\n        if (scripts == null || !scripts.length) return;\n        var src = scripts[scripts.length-1].src;\n        if (!src) return;\n        var q = src.indexOf(\"?\");\n        if (q < 0) return;\n        parameters = OAuth.getParameterMap(OAuth.decodeForm(src.substring(q+1)));\n        var t = parameters[parameterName];\n        if (t == null) return;\n        OAuth.correctTimestamp(t);\n    }\n,\n    /** Generate timestamps starting with the given value. */\n    correctTimestamp: function correctTimestamp(timestamp) {\n        OAuth.timeCorrectionMsec = (timestamp * 1000) - (new Date()).getTime();\n    }\n,\n    /** The difference between the correct time and my clock. */\n    timeCorrectionMsec: 0\n,\n    timestamp: function timestamp() {\n        var t = (new Date()).getTime() + OAuth.timeCorrectionMsec;\n        return Math.floor(t / 1000);\n    }\n,\n    nonce: function nonce(length) {\n        var chars = OAuth.nonce.CHARS;\n        var result = \"\";\n        for (var i = 0; i < length; ++i) {\n            var rnum = Math.floor(Math.random() * chars.length);\n            result += chars.substring(rnum, rnum+1);\n        }\n        return result;\n    }\n});\n\nOAuth.nonce.CHARS = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz\";\n\n/** Define a constructor function,\n    without causing trouble to anyone who was using it as a namespace.\n    That is, if parent[name] already existed and had properties,\n    copy those properties into the new constructor.\n */\nOAuth.declareClass = function declareClass(parent, name, newConstructor) {\n    var previous = parent[name];\n    parent[name] = newConstructor;\n    if (newConstructor != null && previous != null) {\n        for (var key in previous) {\n            if (key != \"prototype\") {\n                newConstructor[key] = previous[key];\n            }\n        }\n    }\n    return newConstructor;\n}\n\n/** An abstract algorithm for signing messages. */\nOAuth.declareClass(OAuth, \"SignatureMethod\", function OAuthSignatureMethod(){});\n\nOAuth.setProperties(OAuth.SignatureMethod.prototype, // instance members\n{\n    /** Add a signature to the message. */\n    sign: function sign(message) {\n        var baseString = OAuth.SignatureMethod.getBaseString(message);\n        var signature = this.getSignature(baseString);\n        OAuth.setParameter(message, \"oauth_signature\", signature);\n        return signature; // just in case someone's interested\n    }\n,\n    /** Set the key string for signing. */\n    initialize: function initialize(name, accessor) {\n        var consumerSecret;\n        if (accessor.accessorSecret != null\n            && name.length > 9\n            && name.substring(name.length-9) == \"-Accessor\")\n        {\n            consumerSecret = accessor.accessorSecret;\n        } else {\n            consumerSecret = accessor.consumerSecret;\n        }\n        this.key = OAuth.percentEncode(consumerSecret)\n             +\"&\"+ OAuth.percentEncode(accessor.tokenSecret);\n    }\n});\n\n/* SignatureMethod expects an accessor object to be like this:\n   {tokenSecret: \"lakjsdflkj...\", consumerSecret: \"QOUEWRI..\", accessorSecret: \"xcmvzc...\"}\n   The accessorSecret property is optional.\n */\n// Class members:\nOAuth.setProperties(OAuth.SignatureMethod, // class members\n{\n    sign: function sign(message, accessor) {\n        var name = OAuth.getParameterMap(message.parameters).oauth_signature_method;\n        if (name == null || name == \"\") {\n            name = \"HMAC-SHA1\";\n            OAuth.setParameter(message, \"oauth_signature_method\", name);\n        }\n        OAuth.SignatureMethod.newMethod(name, accessor).sign(message);\n    }\n,\n    /** Instantiate a SignatureMethod for the given method name. */\n    newMethod: function newMethod(name, accessor) {\n        var impl = OAuth.SignatureMethod.REGISTERED[name];\n        if (impl != null) {\n            var method = new impl();\n            method.initialize(name, accessor);\n            return method;\n        }\n        var err = new Error(\"signature_method_rejected\");\n        var acceptable = \"\";\n        for (var r in OAuth.SignatureMethod.REGISTERED) {\n            if (acceptable != \"\") acceptable += '&';\n            acceptable += OAuth.percentEncode(r);\n        }\n        err.oauth_acceptable_signature_methods = acceptable;\n        throw err;\n    }\n,\n    /** A map from signature method name to constructor. */\n    REGISTERED : {}\n,\n    /** Subsequently, the given constructor will be used for the named methods.\n        The constructor will be called with no parameters.\n        The resulting object should usually implement getSignature(baseString).\n        You can easily define such a constructor by calling makeSubclass, below.\n     */\n    registerMethodClass: function registerMethodClass(names, classConstructor) {\n        for (var n = 0; n < names.length; ++n) {\n            OAuth.SignatureMethod.REGISTERED[names[n]] = classConstructor;\n        }\n    }\n,\n    /** Create a subclass of OAuth.SignatureMethod, with the given getSignature function. */\n    makeSubclass: function makeSubclass(getSignatureFunction) {\n        var superClass = OAuth.SignatureMethod;\n        var subClass = function() {\n            superClass.call(this);\n        };\n        subClass.prototype = new superClass();\n        // Delete instance variables from prototype:\n        // delete subclass.prototype... There aren't any.\n        subClass.prototype.getSignature = getSignatureFunction;\n        subClass.prototype.constructor = subClass;\n        return subClass;\n    }\n,\n    getBaseString: function getBaseString(message) {\n        var URL = message.action;\n        var q = URL.indexOf('?');\n        var parameters;\n        if (q < 0) {\n            parameters = message.parameters;\n        } else {\n            // Combine the URL query string with the other parameters:\n            parameters = OAuth.decodeForm(URL.substring(q + 1));\n            var toAdd = OAuth.getParameterList(message.parameters);\n            for (var a = 0; a < toAdd.length; ++a) {\n                parameters.push(toAdd[a]);\n            }\n        }\n        return OAuth.percentEncode(message.method.toUpperCase())\n         +'&'+ OAuth.percentEncode(OAuth.SignatureMethod.normalizeUrl(URL))\n         +'&'+ OAuth.percentEncode(OAuth.SignatureMethod.normalizeParameters(parameters));\n    }\n,\n    normalizeUrl: function normalizeUrl(url) {\n        var uri = OAuth.SignatureMethod.parseUri(url);\n        var scheme = uri.protocol.toLowerCase();\n        var authority = uri.authority.toLowerCase();\n        var dropPort = (scheme == \"http\" && uri.port == 80)\n                    || (scheme == \"https\" && uri.port == 443);\n        if (dropPort) {\n            // find the last : in the authority\n            var index = authority.lastIndexOf(\":\");\n            if (index >= 0) {\n                authority = authority.substring(0, index);\n            }\n        }\n        var path = uri.path;\n        if (!path) {\n            path = \"/\"; // conforms to RFC 2616 section 3.2.2\n        }\n        // we know that there is no query and no fragment here.\n        return scheme + \"://\" + authority + path;\n    }\n,\n    parseUri: function parseUri (str) {\n        /* This function was adapted from parseUri 1.2.1\n           http://stevenlevithan.com/demo/parseuri/js/assets/parseuri.js\n         */\n        var o = {key: [\"source\",\"protocol\",\"authority\",\"userInfo\",\"user\",\"password\",\"host\",\"port\",\"relative\",\"path\",\"directory\",\"file\",\"query\",\"anchor\"],\n                 parser: {strict: /^(?:([^:\\/?#]+):)?(?:\\/\\/((?:(([^:@]*):?([^:@]*))?@)?([^:\\/?#]*)(?::(\\d*))?))?((((?:[^?#\\/]*\\/)*)([^?#]*))(?:\\?([^#]*))?(?:#(.*))?)/ }};\n        var m = o.parser.strict.exec(str);\n        var uri = {};\n        var i = 14;\n        while (i--) uri[o.key[i]] = m[i] || \"\";\n        return uri;\n    }\n,\n    normalizeParameters: function normalizeParameters(parameters) {\n        if (parameters == null) {\n            return \"\";\n        }\n        var list = OAuth.getParameterList(parameters);\n        var sortable = [];\n        for (var p = 0; p < list.length; ++p) {\n            var nvp = list[p];\n            if (nvp[0] != \"oauth_signature\") {\n                sortable.push([ OAuth.percentEncode(nvp[0])\n                              + \" \" // because it comes before any character that can appear in a percentEncoded string.\n                              + OAuth.percentEncode(nvp[1])\n                              , nvp]);\n            }\n        }\n        sortable.sort(function(a,b) {\n                          if (a[0] < b[0]) return  -1;\n                          if (a[0] > b[0]) return 1;\n                          return 0;\n                      });\n        var sorted = [];\n        for (var s = 0; s < sortable.length; ++s) {\n            sorted.push(sortable[s][1]);\n        }\n        return OAuth.formEncode(sorted);\n    }\n});\n\nOAuth.SignatureMethod.registerMethodClass([\"PLAINTEXT\", \"PLAINTEXT-Accessor\"],\n    OAuth.SignatureMethod.makeSubclass(\n        function getSignature(baseString) {\n            return this.key;\n        }\n    ));\n\nOAuth.SignatureMethod.registerMethodClass([\"HMAC-SHA1\", \"HMAC-SHA1-Accessor\"],\n    OAuth.SignatureMethod.makeSubclass(\n        function getSignature(baseString) {\n            b64pad = '=';\n            var signature = b64_hmac_sha1(this.key, baseString);\n            return signature;\n        }\n    ));\n\nOAuth.correctTimestampFromSrc();\n        \nTrace(\"Liangnan is a good guy 2\");       \n\nfunction makeSignedRequest(ck,cks,encodedurl, m, params) {\n    var accessor = {\n                consumerKey:\"kTcvJzN53TTYogOnRrs1w\",//\"fXNFQrM5JbWjt04rdc0JQ\",\n                consumerSecret:\"plgZ8NarrHwrEKfew7Jpjak3cDjK7p0D3L1yWSgpK0o\",//\"YrkELRM0e95X1hcppJcFfU0lORWTg6F8smRmoxet7U\",\n                token: ck,\n                tokenSecret: cks\n            };\n\n        var p = [[\"oauth_version\",\"1.0\"],[\"oauth_consumer_key\",\"fXNFQrM5JbWjt04rdc0JQ\"], [\"oauth_token\", ck]];\n\n        for (var i = 0; i < params.length; i++) {\n            p.push(params[i])\n        }\n\n        var message = { action: encodedurl, method: m, parameters: p};\n\n    OAuth.setTimestampAndNonce(message);\n    OAuth.SignatureMethod.sign(message, accessor);\n\n    var parameterMap = OAuth.getParameterMap(message);\n    var baseStr = OAuth.decodeForm(OAuth.SignatureMethod.getBaseString(message));\n    var theSig = \"\";\n\n    if (parameterMap.parameters) {\n        for (var item in parameterMap.parameters) {\n            for (var subitem in parameterMap.parameters[item]) {\n                if (parameterMap.parameters[item][subitem] == \"oauth_signature\") {\n                    theSig = encodeURIComponent(parameterMap.parameters[item][1]);\n                    break;\n                }\n            }\n        }\n    }\n\n    var paramList = baseStr[2][0].split(\"&\");\n    paramList.push(\"oauth_signature=\"+theSig);\n    paramList.sort(function(a,b) {\n        if (a[0] < b[0]) return -1;\n        if (a[0] > b[0]) return 1;\n        if (a[1] < b[1]) return  -1;\n        if (a[1] > b[1]) return 1;\n        return 0;\n    });\n    var locString = \"\";\n    for (var x in paramList) {\n        locString += paramList[x] + \"&\";\n    }\n\n    var finalStr = baseStr[1][0] + \"?\" + locString.slice(0,locString.length - 1);\n\n    return finalStr;\n};\n\nvar akey = null, atoken = null;\nvar loginWindow = null;\nvar postWindow = null;\nvar twitterHomeUrl      = \"https://twitter.com/statuses/friends_timeline.rss\";\nvar twitterTweetOwnUrl  = \"https://twitter.com/statuses/user_timeline.xml\";\nvar twitterTweetUrl     = \"https://twitter.com/statuses/update.xml\";\nvar twitterProfileUrl   = \"https://twitter.com/account/verify_credentials.json\";\nvar twitterLogoutUrl    = \"https://twitter.com/account/end_session.xml\";\nvar extra = \"button_url_root=\" + encodeURIComponent(\"https://s3.amazonaws.com/com.alexa.toolbar/alexa9-prod/buttons\");\nvar alexaLoginUrl       = \"http://www.alexa.com/data/socialpost/twitter.php?\" + extra;\nvar alexaPostUrl        = \"https://s3.amazonaws.com/com.alexa.toolbar/alexa9-prod/buttons/twitter/twitter-update.html\";\nvar twitter_user_profile = null;\nvar isLoadTweets        = false;\nvar hasMenu = false;\n\nfunction pageTurnListener(siteinfo) {\n  if (siteinfo && siteinfo.site)\n  {\n    Alexa.button.properties.tooltip = \"Tweet about this page\";\n  }\n  else\n  {\n    Alexa.button.properties.tooltip = \"Tweet\";\n  }\n}\n\nfunction openUrl(callUrl, params, winPro) {\n    Trace(\"Opening \" + callUrl);\n    //Alexa.button.properties.text= \"Loading\";\n    paraString = \"\";\n\n    for (var i = 0; i < params.length; i++) {\n        var key     = encodeURIComponent(params[i][0]);\n        var value   = encodeURIComponent(params[i][1]);\n        paraString  += (key + \"=\" + value + \"&\");\n    }\n\n    var realUrl = callUrl;\n    return Alexa.browser.navigate(realUrl, \"newDialog\", winPro, callbackObj);\n}\n\nfunction getTime(offset)\n{\n    var t = (new Date()).getTime();\n    t = Math.floor(t / 1000) + offset;\n    return t;\n}\n\nfunction loadTwitterRss()\n{\n    if ( !loadkeysandisNoKey() )\n        sendTwitterRequest(twitterHomeUrl, loadRSS, \"GET\", []);\n    else\n        logoutTwitter();\n}\n\nfunction logoutTwitter()\n{\n    if ( this.akey && this.atoken )\n        loadLogout();\n    clearkeys();\n    Alexa.button.menu.destroy();  \n    Alexa.storage.saveClientState(\"new\", \"0\");\n    if (!hasSaveClientStateListener && Alexa.button.properties.updated)\n    {\n      Alexa.button.properties.updated = false;\n      Alexa.button.update();\n    }\n    hasMenu = false;\n}\n\nfunction gotoMyTweets()\n{\n    if ( !loadkeysandisNoKey() )\n    {\n        var url = \"http://twitter.com\"\n        if (twitter_user_profile)\n            url = \"http://twitter.com/\" + twitter_user_profile[\"screen_name\"];  \n        Alexa.browser.navigate(url, \"newTab\");\n    }    \n    else\n        logoutTwitter();\n}\n\nfunction sendTwitterRequest(twitterUrl, tCallback, m, params)\n{\n    var url = makeSignedRequest(akey, atoken, twitterUrl, m, params);\n    Trace(url);\n    tCallback(url);\n}\n\nfunction loadLogout()\n{\n    sendTwitterRequest(twitterLogoutUrl, callbackLogout, \"POST\", []);\n}\n\nfunction callbackLogout(url)\n{\n  Alexa.tools.XMLHttpRequest({\n    method: 'POST',\n    mozBackgroundRequest: true,\n    url: url,\n     onload: function(responseDetails)\n     {\n       if (responseDetails.status == 200)\n       {\n         Trace(\"Successfully Log out\");\n       }\n       if (responseDetails.status == 401) {\n         Trace(\"akey\" +  akey);\n         Trace(\"atoken\" + atoken);\n         Trace(\"url\" + url);\n         var xml = responseDetails.responseText;\n         Trace(\"xml\" + xml);\n       }\n     }\n  });\n}\n\nfunction loadRSS(url)\n{\n  Trace(\"loadRSS: \" + url);\n  var funcObj = function(text, status)\n  {\n    if (text == null)\n      return;\n    if (status == 200)\n    { \n      Alexa.storage.saveClientState(\"rss_text\", text);\n      if (!hasSaveClientStateListener)\n      {\n        onTwitterUpdate(\"rss_text\", text);\n      }\n    }\n    if (status == 401) {\n      Trace(\"akey\" +  akey);\n      Trace(\"atoken\" + atoken);\n      Trace(\"url\" + url);\n      var xml = text;\n      Trace(\"xml\" + xml);\n    }\n  };\n\n  var last = Alexa.storage.readClientState(\"rss_time\");\n  var text = Alexa.storage.readClientState(\"rss_text\");\n  var now = new Date();\n  if (parseInt(last, 10) + 5*60*1000 > now.getTime() && text)\n  {\n    onTwitterUpdate(\"rss_text\", text);\n  }\n  else\n  {\n    Alexa.storage.saveClientState(\"rss_time\", (new Date()).getTime());\n    Alexa.tools.sandboxRequest(url, funcObj);\n  }\n  /*Alexa.tools.XMLHttpRequest({\n    method: 'GET',\n    mozBackgroundRequest: true,\n    url: url,\n    headers : {\"Cookie\": \"\",\"abc\": \"ahaha\"},\n     onload: function(responseDetails)\n     {\n       if (responseDetails.status == 200)\n       {\n         var all_text = [];\n         Alexa.button.menu.create();\n         Alexa.button.menu.clear();\n         Alexa.button.menu.addCallbackItem(\"Tweet\", tweet);\n         Alexa.button.menu.addCallbackItem(\"Refresh\", loadTwitterRss);\n         Alexa.button.menu.addCallbackItem(\"My Tweets\", gotoMyTweets);\n         Alexa.button.menu.addSeparator();\n         Alexa.button.menu.addCallbackItem(\"Logout\", logoutTwitter);\n         Alexa.button.menu.addSeparator();\n         var text = responseDetails.responseText;\n         var parser = new Alexa.tools.DOMParser;\n         xmlDoc = parser.parseFromString(text,\"text/xml\")\n         var items = xmlDoc.getElementsByTagName(\"item\");\n         for (var i = 0; i < items.length; i++)\n         {\n           var item = items[i];\n           var title = Alexa.tools.getNodeText(item.getElementsByTagName(\"title\")[0]);\n           var link = Alexa.tools.getNodeText(item.getElementsByTagName(\"link\")[0]);\n           Alexa.button.menu.addUrlItem(title, link);\n           all_text.push(title);\n           all_text.push(link);\n         }\n         var new_rss_hash = b64_sha1(all_text.join(\"\\n\"));\n         var old_rss_hash = Alexa.storage.readClientState(\"rss_hash\");\n         Alexa.storage.saveClientState(\"rss_hash\", new_rss_hash);\n         if (new_rss_hash != old_rss_hash)\n         {\n           Alexa.storage.saveClientState(\"new\", \"1\");\n           if (!hasSaveClientStateListener && !Alexa.button.properties.updated)\n           {\n             Alexa.button.properties.updated = true;\n             Alexa.button.update();\n           }\n         }\n         isLoadTweets = true;\n       }\n       if (responseDetails.status == 401) {\n         Trace(\"akey\" +  akey);\n         Trace(\"atoken\" + atoken);\n         Trace(\"url\" + url);\n         var xml = responseDetails.responseText;\n         Trace(\"xml\" + xml);\n       }\n     }\n  });*/\n}\n\nfunction tweetOwnCallback(url)\n{\n  var funcObj = function(text, status)\n  {\n    if (status == 200)\n     {\n       var parser = new Alexa.tools.DOMParser;\n       xmlDoc = parser.parseFromString(text,\"text/xml\")\n       var statusNode = xmlDoc.getElementsByTagName(\"status\");\n  \n       statusone = statusNode[0];\n       var content = Alexa.tools.getNodeText(statusone.getElementsByTagName(\"text\")[0]);\n       //var lastContent  = postWindow.document.getElementById(\"lastContent\");\n       //lastContent.innerHTML = String(content);\n  \n       var time = Alexa.tools.getNodeText(statusone.getElementsByTagName(\"created_at\")[0]);\n       var timearray = time.split(\" \");\n       var year = timearray.pop();\n       timearray.pop();\n       timearray.push(year);\n       timearray.push(\"UTC\");\n       var timeString = timearray.join(\" \");\n       var d = Math.round( ( (new Date()).getTime() - Date.parse(timeString)) / 1000 );\n  \n       Trace(\"difftime: \" + d);\n       var tString = \"\";\n       if(d <= 60)\n          tString = \"1 min ago\";\n       else if (d < 3600)\n          tString = Math.floor(d / 60) + \" mins ago\";\n       else if (d < 7200)\n          tString = \"1 hour ago\";\n       else if (d < 86400)\n          tString = Math.floor(d / 3600) + \" hours ago\";\n       else if (d < 86400 * 2)\n          tString = \"1 day ago\";\n       else if (d < 86400 * 31)\n          tString = Math.floor(d / 86400) + \" days ago\";\n       else if (d < 86400 * 2 * 30)\n          tString = \"1 month ago\";\n       else\n          tString = Math.floor(d / (86400 * 30)) + \" months ago\";\n  \n       for (var i = 0; i < tweet_listeners.length; i++)\n       {\n         tweet_listeners[i](String(tString), content);\n       } \n     }\n     if (status == 401) {\n       Trace(\"akey\" + akey);\n       Trace(\"atoken\" + atoken);\n       Trace(\"url\" + url);\n       var xml = text;\n       Trace(\"xml\"+ xml);\n     }\n  }\n  \n  Alexa.tools.sandboxRequest(url, funcObj);\n\n\n\n  /*Alexa.tools.XMLHttpRequest({\n    method: 'GET',\n    mozBackgroundRequest: true,\n    url: url,\n     onload: function(responseDetails)\n     {\n       if (responseDetails.status == 200)\n       {\n         var text = responseDetails.responseText;\n         var parser = new Alexa.tools.DOMParser;\n         xmlDoc = parser.parseFromString(text,\"text/xml\")\n         var status = xmlDoc.getElementsByTagName(\"status\");\n\n         statusone = status[0];\n         var content = Alexa.tools.getNodeText(statusone.getElementsByTagName(\"text\")[0]);\n         //var lastContent  = postWindow.document.getElementById(\"lastContent\");\n         //lastContent.innerHTML = String(content);\n\n         var time = Alexa.tools.getNodeText(statusone.getElementsByTagName(\"created_at\")[0]);\n         var timearray = time.split(\" \");\n         var year = timearray.pop();\n         timearray.pop();\n         timearray.push(year);\n         timearray.push(\"UTC\");\n         var timeString = timearray.join(\" \");\n         var d = Math.round( ( (new Date()).getTime() - Date.parse(timeString)) / 1000 );\n\n         Trace(\"difftime: \" + d);\n         var tString = \"\";\n         if(d <= 60)\n            tString = \"1 min ago\";\n         else if (d < 3600)\n            tString = Math.floor(d / 60) + \" mins ago\";\n         else if (d < 7200)\n            tString = \"1 hour ago\";\n         else if (d < 86400)\n            tString = Math.floor(d / 3600) + \" hours ago\";\n         else if (d < 86400 * 2)\n            tString = \"1 day ago\";\n         else if (d < 86400 * 31)\n            tString = Math.floor(d / 86400) + \" days ago\";\n         else if (d < 86400 * 2 * 30)\n            tString = \"1 month ago\";\n         else\n            tString = Math.floor(d / (86400 * 30)) + \" months ago\";\n\n         for (var i = 0; i < tweet_listeners.length; i++)\n         {\n           tweet_listeners[i](String(tString), content);\n         } \n       }\n       if (responseDetails.status == 401) {\n         Trace(\"akey\" + akey);\n         Trace(\"atoken\" + atoken);\n         Trace(\"url\" + url);\n         var xml = responseDetails.responseText;\n         Trace(\"xml\"+ xml);\n       }\n     }\n  });*/\n}\n\nfunction tweetCallback(url)\n{\n  var funcObj = function(text, statusCode)\n  {\n    if (status == 200)\n    {\n        ;\n    }\n    if (status == 401) {\n      Trace(\"akey\" + akey);\n      Trace(\"atoken\" + atoken);\n      Trace(\"url\" + url);\n      var xml = text;\n      Trace(\"xml\" + xml);\n    }\n  }\n  Alexa.tools.sandboxRequest(url, funcObj, \"POST\", null);\n    /*Alexa.tools.XMLHttpRequest({\n    method: 'POST',\n    mozBackgroundRequest: true,\n    url: url,\n     onload: function(responseDetails)\n     {\n       if (responseDetails.status == 200)\n       {\n            ;\n       }\n       if (responseDetails.status == 401) {\n         Trace(\"akey\" + akey);\n         Trace(\"atoken\" + atoken);\n         Trace(\"url\" + url);\n         var xml = responseDetails.responseText;\n         Trace(\"xml\" + xml);\n       }\n     }\n  });*/\n}\n\nfunction loadTwitterProfile()\n{\n    sendTwitterRequest(twitterProfileUrl, callbackProfile, \"GET\", []);\n}\n\nfunction callbackProfile(url)\n{\n  var funcObj = function(text, status)\n  {\n    if (status == 200)\n    {\n      Trace(\"Successfully Profile\");\n      Trace(text);\n      Alexa.storage.saveClientState(\"aprofile\", text);\n      twitter_user_profile = eval('(' + text + ')');\n      loadTwitterRss();\n    }\n    if (status == 401) \n    {\n      Trace(\"akey\" +  akey);\n      Trace(\"atoken\" + atoken);\n      Trace(\"url\" + url);\n      var xml = text;\n      Trace(\"xml\" + xml);\n    }\n  };\n\n  Alexa.tools.sandboxRequest(url, funcObj);\n\n  /*Alexa.tools.XMLHttpRequest({\n    method: 'GET',\n    mozBackgroundRequest: true,\n    url: url,\n     onload: function(responseDetails)\n     {\n       if (responseDetails.status == 200)\n       {\n         Trace(\"Successfully Profile\");\n         text = responseDetails.responseText;\n         Trace(text);\n         Alexa.storage.saveClientState(\"aprofile\", text);\n         twitter_user_profile = eval('(' + text + ')');\n         loadTwitterRss();\n       }\n       if (responseDetails.status == 401) {\n         Trace(\"akey\" +  akey);\n         Trace(\"atoken\" + atoken);\n         Trace(\"url\" + url);\n         var xml = responseDetails.responseText;\n         Trace(\"xml\" + xml);\n       }\n     }\n  });*/\n}\n\nvar tweet_listeners = [];\nvar callbackObj = {\n    callbackAccessToken: function (accessKey, accessToken, profile)\n    {\n        akey = accessKey;\n        atoken = accessToken;\n\n        Alexa.storage.saveClientState(\"akey\", accessKey);\n        Alexa.storage.saveClientState(\"atoken\", accessToken);\n        var t= getTime(3600 * 6);\n        Alexa.storage.saveClientState(\"atime\", String(t));\n\n        loginWindow.close();\n        loadTwitterProfile();\n        postWindow = openUrl(alexaPostUrl, [], \"width=555,height=250,transparent,top=-4\");\n    },\n\n    callbackLastTweet: function()\n    {\n        sendTwitterRequest(twitterTweetOwnUrl, tweetOwnCallback, \"GET\", [])\n    },\n\n    registerTweetListener: function(callback)\n    {\n      tweet_listeners.push(callback);\n    },\n\n    callbackTweet: function (message)\n    {\n        postWindow.hide();\n        sendTwitterRequest(twitterTweetUrl, tweetCallback,\"POST\", [[\"status\", message]]);\n    },\n\n    callbackTweetClose: function()\n    {\n        postWindow.hide();\n    },\n\n    clearTweetListeners: function()\n    {\n        tweet_listeners = [];\n    },\n\n    callbackbitly: function(cb)\n    {\n        Trace(\"bitly\");\n        var data = Alexa.browser.getSiteInfo();\n        Trace(data);\n        Trace(data.url);\n        if (data && data.url)\n        {\n            bitly(data.url, cb);    \n        } else {\n            cb(null);\n        }\n    }\n}\n\nfunction bitly(longurl, cb)\n{\n  var url = \"http://api.bit.ly/shorten?version=2.0.1&login=alexainternet&apiKey=R_53e85b8ec5cb4bb74f7d9d00e7299f94&format=json\";\n  var data = \"longUrl=\" + encodeURIComponent(longurl);\n  Trace(url);\n  Trace(data);\n  Alexa.tools.XMLHttpRequest({\n    method: 'POST',\n    mozBackgroundRequest: true,\n    data: data,\n    url: url,\n    headers : {\"content-type\": \"application/x-www-form-urlencoded\"},\n     onload: function(responseDetails)\n     {\n       if (responseDetails.status == 200)\n       {\n         var text = responseDetails.responseText;\n         Trace(text);\n         var obj = eval('(' + text + ')');\n\n         if (obj[\"errorCode\"] != 0)\n            var shorturl = null;\n         else\n            var shorturl = obj[\"results\"][longurl][\"shortUrl\"];\n\n         cb(shorturl);\n       }\n     }\n  });\n    \n}\n\nfunction loadkeys()\n{\n    Trace(\"About to get atime\");\n    var atime = Alexa.storage.readClientState(\"atime\");\n    Trace(\"Got atime 1\");\n    Trace(\"Got atime: \" + atime);\n    var t= getTime(0);\n\n    if (atime != '' && Number(atime) > t)\n    {\n        if (this.akey == null)\n        {\n            var akey = Alexa.storage.readClientState(\"akey\");\n            if (akey != '')\n                this.akey = akey;\n        }\n\n        if (this.atoken == null)\n        {\n            var atoken = Alexa.storage.readClientState(\"atoken\");\n            if (atoken != '')\n                this.atoken = atoken;\n        }\n\n        if (this.twitter_user_profile == null)\n        {\n            var aprofile = Alexa.storage.readClientState(\"aprofile\");\n            if (aprofile != '')\n                this.twitter_user_profile  = eval('(' + aprofile + ')');;\n        }\n    } else {\n        this.akey   = null;\n        this.atoken = null;\n        this.twitter_user_profile = null;\n    }\n }\n\nfunction isNoKey()\n{\n    return (this.twitter_user_profile == null || this.akey == null || this.atoken == null);\n}\n\nfunction loadkeysandisNoKey()\n{\n    loadkeys();\n    return isNoKey();\n}\n\nfunction random()\n{\n    var r = Math.floor(Math.random() * 901 + 100 );\n    return r;\n}\n\nfunction clearkeys()\n{\n    Alexa.storage.saveClientState(\"akey\", \"\");\n    Alexa.storage.saveClientState(\"atoken\", \"\");\n    Alexa.storage.saveClientState(\"atime\", \"\");\n    Alexa.storage.saveClientState(\"rss_time\", 0);\n    Alexa.storage.saveClientState(\"rss_text\", \"\");\n    this.akey           = null;\n    this.atoken         = null;\n    this.atime          = null;\n    this.twitter_user_profile = null;\n}\n\nfunction onLeftClick(event) {\n//window.alert(window.href.url);\n    Alexa.events.preventDefault(event);\n    if ( loadkeysandisNoKey() )\n    {\n        if( !loginWindow || loginWindow.isClosed() )\n            loginWindow = openUrl(alexaLoginUrl, [], \"width=800,height=600,close=yes\");\n\n    }\n    else\n    {\n        if ( !isLoadTweets )\n            loadTwitterRss();\n        if( !postWindow || postWindow.isClosed() )\n        {\n          postWindow = openUrl(alexaPostUrl, [], \"width=555,height=250,transparent,top=-4\");\n        }\n        else\n        {\n          postWindow.show();\n        }\n    }\n\n}\n\nfunction tweet()\n{\n  if( !postWindow || postWindow.isClosed() )\n  {\n    postWindow = openUrl(alexaPostUrl, [], \"width=555,height=250,transparent,top=-4\");\n  }\n  else\n  {\n    postWindow.show();\n  }\n}\n\nfunction onTwitterUpdate(key, text)\n{\n  if (!text)\n  {\n    logoutTwitter();\n    return;\n  }\n  var all_text = [];\n  if (!hasMenu)\n  {\n    Alexa.button.menu.create();\n    Alexa.events.addPopupShowingListener(function(event)\n    {\n      Alexa.storage.saveClientState(\"new\", \"0\");\n      if (!hasSaveClientStateListener && Alexa.button.properties.updated)\n      {\n        Alexa.button.properties.updated = false;\n        Alexa.button.update();\n      }\n    });\n    hasMenu = true;\n  }\n  Alexa.button.menu.clear();\n  Alexa.button.menu.addCallbackItem(\"Tweet\", tweet);\n  Alexa.button.menu.addCallbackItem(\"Refresh\",\n    function()\n    {\n      Alexa.storage.saveClientState(\"rss_time\", 0);\n      loadTwitterRss();\n    }\n  );\n  Alexa.button.menu.addCallbackItem(\"My Tweets\", gotoMyTweets);\n  Alexa.button.menu.addSeparator();\n  Alexa.button.menu.addCallbackItem(\"Logout\", logoutTwitter);\n  Alexa.button.menu.addSeparator();\n  var parser = new Alexa.tools.DOMParser;\n  xmlDoc = parser.parseFromString(text,\"text/xml\")\n  var items = xmlDoc.getElementsByTagName(\"item\");\n  for (var i = 0; i < items.length; i++)\n  {\n    var item = items[i];\n    var title = Alexa.tools.getNodeText(item.getElementsByTagName(\"title\")[0]);\n    var link = Alexa.tools.getNodeText(item.getElementsByTagName(\"link\")[0]);\n    Alexa.button.menu.addUrlItem(title, link);\n    all_text.push(title);\n    all_text.push(link);\n  }\n  var new_rss_hash = b64_sha1(all_text.join(\"\\n\"));\n  var old_rss_hash = Alexa.storage.readClientState(\"rss_hash\");\n  Alexa.storage.saveClientState(\"rss_hash\", new_rss_hash);\n  var updated = Alexa.storage.readClientState(\"new\");\n  if (new_rss_hash != old_rss_hash)\n  {\n    Alexa.storage.saveClientState(\"new\", \"1\");\n    if (!hasSaveClientStateListener && !Alexa.button.properties.updated)\n    {\n      Alexa.button.properties.updated = true;\n      Alexa.button.update();\n    }\n  }\n  else if (updated == \"1\" && !Alexa.button.properties.updated)\n  {\n    Alexa.button.properties.updated = true;\n    Alexa.button.update();\n  }\n  isLoadTweets = true;\n}\n\n\nAlexa.events.addPageTurnListener(pageTurnListener);\nAlexa.events.addLeftClickListener(onLeftClick); \nvar hasSaveClientStateListener = false;\nif (typeof Alexa.events.addSaveClientStateListener != 'undefined')\n{\n  Alexa.events.addSaveClientStateListener(\"rss_text\", onTwitterUpdate);\n  Alexa.events.addSaveClientStateListener(\"new\",\n    function(key, value)\n    {\n      var updated = (value == \"1\" ? true : false);\n      if (Alexa.button.properties.updated != updated)\n      {\n        Alexa.button.properties.updated = updated;\n        Alexa.button.update();\n      }\n    }\n  );\n  hasSaveClientStateListener = true;\n}\n\n\nif (!loadkeysandisNoKey())\n{\n  loadTwitterRss();\n}\n\nsetInterval(loadTwitterRss, 300000);\n\nvar TRACE = false;\nfunction Trace(message)\n{\n    if (TRACE)\n        Alexa.tools.trace(\"twitter: \" + message);\n}\n\n\n    ]]></javascript>\n  </button>\n</buttons>\n");
user_pref("extensions.alexa.active-buttons.twitter.url", "https://s3.amazonaws.com/com.alexa.toolbar/alexa9-prod/buttons/twitter/twitter.xml");
user_pref("extensions.alexa.active-buttons.twitter.version", "alxf-1.52");
user_pref("extensions.alexa.configured2", true);
user_pref("extensions.alexa.demographics-session", "yaCHb16VHX00yV");
user_pref("extensions.alexa.display-style", "statusbar");
user_pref("extensions.alexa.error-handling", true);
user_pref("extensions.alexa.location-bar-search", true);
user_pref("extensions.alexa.session", "yaCHb16VHX00yV");
user_pref("extensions.alexa.toolbarXMLText", "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<toolbar>\n  <configuration>\n    <javascriptUrl/>\n    <updateUrl><![CDATA[__UPDATE__ROOT__PLACEHOLDER__/autoupdate/alexa9status.xml]]></updateUrl>\n    <installButtonsUrl></installButtonsUrl>\n    <interpunctImage><![CDATA[__VERSION__TOOLBAR__ROOT__PLACEHOLDER__/middot.png]]></interpunctImage>\n    <separatorImage><![CDATA[__VERSION__TOOLBAR__ROOT__PLACEHOLDER__/separator.png]]></separatorImage>\n    <customScriptUrl><![CDATA[__VERSION__TOOLBAR__ROOT__PLACEHOLDER__/cs.html]]></customScriptUrl>\n  </configuration>\n  <button>\n    <type>logo</type>\n    <text/>\n    <image><![CDATA[__VERSION__TOOLBAR__ROOT__PLACEHOLDER__/logo.png]]></image>\n    <hoverImage><![CDATA[__VERSION__TOOLBAR__ROOT__PLACEHOLDER__/logo-hover.png]]></hoverImage>\n    <imageType>fullButton</imageType>\n    <url><![CDATA[http://www.alexa.com]]></url>\n    <tooltip><![CDATA[Alexa Home]]></tooltip>\n    <id>lo</id>\n    <menuItems>\n      <menuItem>\n        <type>options</type>\n        <displayName><![CDATA[Options...]]></displayName>\n      </menuItem>\n      <menuItem>\n        <type>organize</type>\n        <displayName><![CDATA[Organize Buttons...]]></displayName>\n      </menuItem>\n      <menuItem>\n        <type>url</type>\n        <displayName><![CDATA[Add Buttons...]]></displayName>\n        <url><![CDATA[https://s3.amazonaws.com/com.alexa.toolbar/alexa9-prod/1.54/buttons/index.html]]></url>\n        <openIn>newTab</openIn>\n      </menuItem>\n      <menuItem>\n        <type>menuBreak</type>\n        <displayName/>\n        <url/>\n      </menuItem>\n      <menuItem>\n        <type>url</type>\n        <displayName><![CDATA[Privacy Policy...]]></displayName>\n        <url><![CDATA[http://www.alexa.com/help/privacy]]></url>\n      </menuItem>\n      <menuItem>\n        <type>url</type>\n        <displayName><![CDATA[Help...]]></displayName>\n        <url><![CDATA[http://www.alexa.com/help/]]></url>\n      </menuItem>\n      <menuItem>\n        <type>url</type>\n        <displayName><![CDATA[Tour...]]></displayName>\n        <url><![CDATA[http://www.alexa.com/toolbar/tour]]></url>\n      </menuItem>\n      <menuItem>\n        <type>menuBreak</type>\n        <displayName/>\n        <url/>\n      </menuItem>\n      <menuItem>\n        <type>about</type>\n        <displayName><![CDATA[About...]]></displayName>\n      </menuItem>\n    </menuItems>\n  </button>\n  <button>\n    <text/>\n    <type>search</type>\n    <image/>\n    <hoverImage/>\n    <imageType/>\n    <url><![CDATA[http://search.toolbars.alexa.com/?ver=__VERSION__PLACEHOLDER__&src=tb&aid=__AID__PLACEHOLDER__&q=__TERM__PLACEHOLDER__]]></url>\n    <width>125</width>\n    <id>se</id>\n  </button>\n  <button>\n    <text></text>\n    <image><![CDATA[__VERSION__TOOLBAR__ROOT__PLACEHOLDER__/search.png]]></image>\n    <hoverImage><![CDATA[__VERSION__TOOLBAR__ROOT__PLACEHOLDER__/search-hover.png]]></hoverImage>\n    <imageType>icon</imageType>\n    <type>searchBuddy</type>\n    <tooltip><![CDATA[Web Search (powered by Google)]]></tooltip>\n    <menuItems>\n      <menuItem>\n        <type>provider</type>\n        <defaultText><![CDATA[Web Search]]></defaultText>\n        <displayName><![CDATA[Web Search (powered by Google)]]></displayName>\n        <url><![CDATA[http://search.toolbars.alexa.com/?ver=__VERSION__PLACEHOLDER__&src=tb&aid=__AID__PLACEHOLDER__&q=__TERM__PLACEHOLDER__]]></url>\n        <icon>true</icon>\n        <image><![CDATA[http://search.toolbars.alexa.com/images/websearch/favicon.ico]]></image>\n      </menuItem>\n      <menuItem>\n        <type>provider</type>\n        <defaultText><![CDATA[Search Alexa]]></defaultText>\n        <displayName><![CDATA[Search Alexa]]></displayName>\n        <url><![CDATA[http://www.alexa.com/search?p=__VERSION__PLACEHOLDER__&q=__TERM__PLACEHOLDER__]]></url>\n        <icon>true</icon>\n        <image><![CDATA[http://www.alexa.com/favicon.ico]]></image>\n      </menuItem>\n      <menuItem>\n        <type>menuBreak</type>\n        <displayName/>\n        <url/>\n      </menuItem>\n      <menuItem>\n        <type>provider</type>\n        <defaultText><![CDATA[Search Amazon]]></defaultText>\n        <displayName><![CDATA[Search Amazon]]></displayName>\n        <url><![CDATA[http://www.amazon.com/gp/search?index=blended&_encoding=UTF8&keywords=__TERM__PLACEHOLDER__&tag=alexa65-tb-20&creative=9325&camp=1789&link_code=ur2&p=TBSearch_T_t_40_L2]]></url>\n        <suggestionUrl><![CDATA[http://xml-us.amznxslt.com/onca/xml?Service=AWSECommerceService&Version=2008-06-26&Operation=ItemSearch&AWSAccessKeyId=0RAFPGWETQZXMXGFNN02&AssociateTag=ie8suggestion-20&ResponseGroup=ItemAttributes,OfferListings,Reviews,Images&MerchantId=FeaturedBuyBoxMerchant&SearchIndex=All&Keywords=__TERM__PLACEHOLDER__&Style=http%3A%2F%2Fg-ecx.images-amazon.com%2Fimages%2FG%2F01%2FAssociates%2FApps%2FIE8Search%2FOpenSearchDescription.xml]]></suggestionUrl>\n        <icon>true</icon>\n        <image><![CDATA[http://www.amazon.com/favicon.ico]]></image>\n      </menuItem>\n      <menuItem>\n        <type>menuBreak</type>\n        <displayName/>\n        <url/>\n      </menuItem>\n      <menuItem>\n        <type>provider</type>\n        <defaultText><![CDATA[Search Wiktionary]]></defaultText>\n        <displayName><![CDATA[Search Wiktionary]]></displayName>\n        <url><![CDATA[http://en.wiktionary.org/w/index.php?search=__TERM__PLACEHOLDER__]]></url>\n        <icon>true</icon>\n        <image><![CDATA[http://en.wikipedia.org/favicon.ico]]></image>\n      </menuItem>\n      <menuItem>\n        <type>provider</type>\n        <defaultText><![CDATA[Search Wikipedia]]></defaultText>\n        <displayName><![CDATA[Search Wikipedia]]></displayName>\n        <url><![CDATA[http://en.wikipedia.org/wiki?search=__TERM__PLACEHOLDER__]]></url>\n        <suggestionUrl><![CDATA[http://en.wikipedia.org/w/api.php?action=opensearch&format=xml&search=__TERM__PLACEHOLDER__&namespace=0]]></suggestionUrl>\n        <icon>true</icon>\n        <image><![CDATA[http://en.wikipedia.org/favicon.ico]]></image>\n      </menuItem>\n    </menuItems>\n    <id>sb</id>\n  </button>\n  <button>\n    <text></text>\n    <type>javascript</type>\n    <image><![CDATA[__TOOLBAR__ROOT__PLACEHOLDER__/__VERSION__PLACEHOLDER__/siteinfo.png]]></image>\n    <hoverImage><![CDATA[__TOOLBAR__ROOT__PLACEHOLDER__/__VERSION__PLACEHOLDER__/siteinfo-hover.png]]></hoverImage>\n    <imageType>icon</imageType>\n    <shortText><![CDATA[Siteinfo for __SITE__PLACEHOLDER__]]></shortText>\n    <tooltip><![CDATA[Site information for __SITE__PLACEHOLDER__]]></tooltip>\n    <id>si</id>\n    <javascript><![CDATA[\n      Alexa.events.addPageTurnListener(function(data)\n      {\n        if (data && data.blocked)\n        {\n          Alexa.button.properties.tooltip = \"__RANK__TIP__PLACEHOLDER__\";\n        }\n        else if (data && data.site)\n        {\n          Alexa.button.properties.tooltip = \"Site information for __SITE__PLACEHOLDER__\";\n        }\n        else\n        {\n          Alexa.button.properties.tooltip = data.disabled ? \"Disabled\" : \"No data\";\n        }\n\n        if (data && data.delta > 0)\n        {\n          Alexa.button.properties.image = \"__VERSION__TOOLBAR__ROOT__PLACEHOLDER__/siteinfo-down.png\";\n          Alexa.button.properties.hoverImage = \"__VERSION__TOOLBAR__ROOT__PLACEHOLDER__/siteinfo-down-hover.png\";\n        }\n        else if (data && data.delta < 0)\n        {\n          Alexa.button.properties.image = \"__VERSION__TOOLBAR__ROOT__PLACEHOLDER__/siteinfo-up.png\";\n          Alexa.button.properties.hoverImage = \"__VERSION__TOOLBAR__ROOT__PLACEHOLDER__/siteinfo-up-hover.png\";\n        }\n        else\n        {\n          Alexa.button.properties.image = \"__VERSION__TOOLBAR__ROOT__PLACEHOLDER__/siteinfo.png\";\n          Alexa.button.properties.hoverImage = \"__VERSION__TOOLBAR__ROOT__PLACEHOLDER__/siteinfo-hover.png\";\n        }\n\n      });\n\n      var popup     = null;\n      var popup_site = null;\n      Alexa.events.addLeftClickListener(function(event)\n      {\n        var data = Alexa.browser.getSiteInfo();\n        if (data && data.blocked)\n        {\n          Alexa.browser.navigate('http://' + data.related[0].link, \"currentTab\");\n        }\n        else if (data && data.site && data.showRanks)\n        {\n          if ( popup_site == data.site && popup && !popup.isClosed() )\n          {\n            popup.show();\n          }\n          else\n          {\n            if ( popup && !popup.isClosed() )\n            {\n              popup.close();\n            }\n            popup_site = data.site;\n            var url = \"http://www.alexa.com/minisiteinfo/__SITE__PLACEHOLDER__?align=after_start&version=20091222\";\n            popup = Alexa.browser.navigate(url, \"newDialog\", \"width=855,height=130,transparent,top=-3,left=-8,align=after_start\", null);\n          }\n        }\n      });\n\n    ]]></javascript>\n  </button>\n  <button>\n    <text><![CDATA[__RANK__TEXT__PLACEHOLDER__]]></text>\n    <shortText><![CDATA[__RANK__TEXT__PLACEHOLDER__]]></shortText>\n    <type>siteRank</type>\n    <image/>\n    <hoverImage/>\n    <imageType/>\n    <url><![CDATA[http://www.alexa.com/siteinfo/__SITE__PLACEHOLDER__#trafficstats]]></url>\n    <openIn>currentTab</openIn>\n    <tooltip><![CDATA[Rank for __SITE__PLACEHOLDER__: __RANK__TEXT__PLACEHOLDER__]]></tooltip>\n    <id>sr</id>\n    <javascript><![CDATA[\n      Alexa.events.addPageTurnListener(function(data)\n      {\n        if (data && data.blocked)\n        {\n          Alexa.button.properties.url = 'http://' + data.related[0].link;\n        }\n        else if (data && data.site)\n        {\n          Alexa.button.properties.url = \"http://www.alexa.com/siteinfo/__SITE__PLACEHOLDER__#trafficstats\";\n        }\n        else\n        {\n          Alexa.button.properties.url = \"\";\n        }\n      });\n    ]]></javascript>\n  </button>\n  <button>\n    <text></text>_\n    <shortText><![CDATA[Related Links]]></shortText>\n    <type>relatedLinks</type>\n    <image><![CDATA[__VERSION__TOOLBAR__ROOT__PLACEHOLDER__/related.png]]></image>\n    <hoverImage><![CDATA[__VERSION__TOOLBAR__ROOT__PLACEHOLDER__/related-hover.png]]></hoverImage>\n    <imageType>icon</imageType>\n    <url><![CDATA[http://www.alexa.com/siteinfo/__SITE__PLACEHOLDER__#relatedlinks]]></url>\n    <openIn>currentTab</openIn>\n    <numHeadlines>0</numHeadlines>\n    <maxHeadlineLength>25</maxHeadlineLength>\n    <tooltip><![CDATA[Related links for __SITE__PLACEHOLDER__]]></tooltip>\n    <id>rl</id>\n    <javascript><![CDATA[\n      Alexa.events.addPageTurnListener(function(data)\n      {\n        if (data && data.blocked)\n        {\n          Alexa.button.properties.url = 'http://' + data.related[0].link;\n          Alexa.button.properties.tooltip = \"__RANK__TIP__PLACEHOLDER__\";\n        }\n        else if (data && data.site)\n        {\n          Alexa.button.properties.url = \"http://www.alexa.com/siteinfo/__SITE__PLACEHOLDER__#relatedlinks\";\n          Alexa.button.properties.tooltip = \"Related links for __SITE__PLACEHOLDER__\";\n        }\n        else\n        {\n          Alexa.button.properties.url = \"\";\n          Alexa.button.properties.tooltip = data.disabled ? \"Disabled\" : \"No data\";\n        }\n      });\n    ]]></javascript>\n  </button>\n  <button>\n    <text></text>\n    <shortText><![CDATA[Wayback Machine]]></shortText>\n    <type>url</type>\n    <image><![CDATA[__VERSION__TOOLBAR__ROOT__PLACEHOLDER__/wayback.png]]></image>\n    <hoverImage><![CDATA[__VERSION__TOOLBAR__ROOT__PLACEHOLDER__/wayback-hover.png]]></hoverImage>\n    <imageType>icon</imageType>\n    <url><![CDATA[http://web.archive.org/web/*/__URL__PLACEHOLDER__]]></url>\n    <tooltip><![CDATA[See archives for __URL__PLACEHOLDER__]]></tooltip>\n    <id>wb</id>\n  </button>\n  <button>\n    <text></text>\n    <shortText><![CDATA[Hot Urls]]></shortText>\n    <type>rss</type>\n    <image><![CDATA[__VERSION__TOOLBAR__ROOT__PLACEHOLDER__/hoturls.png]]></image>\n    <hoverImage><![CDATA[__VERSION__TOOLBAR__ROOT__PLACEHOLDER__/hoturls-hover.png]]></hoverImage>\n    <updatedImage><![CDATA[__VERSION__TOOLBAR__ROOT__PLACEHOLDER__/hoturls-hover.png]]></updatedImage>\n    <updatedHoverImage><![CDATA[__VERSION__TOOLBAR__ROOT__PLACEHOLDER__/hoturls-hover.png]]></updatedHoverImage>\n    <imageType>icon</imageType>\n    <url><![CDATA[http://www.alexa.com/hoturls]]></url>\n    <feedUrl><![CDATA[http://rss.alexa.com/urls?m=3&h=1&n=10&r=1&u=1]]></feedUrl>\n    <numHeadlines>1</numHeadlines>\n    <minHeadlineWidth>0</minHeadlineWidth>\n    <maxHeadlineWidth>300</maxHeadlineWidth>\n    <randomize>true</randomize>\n    <icons>true</icons>\n    <tooltip><![CDATA[The hottest pages on the web right now]]></tooltip>\n    <id>hu</id>\n    <refreshInterval>300</refreshInterval>\n  </button>\n  <button>\n    <text></text>\n    <shortText><![CDATA[Hot Searches]]></shortText>\n    <type>rss</type>\n    <image><![CDATA[__VERSION__TOOLBAR__ROOT__PLACEHOLDER__/hotsearches.png]]></image>\n    <hoverImage><![CDATA[__VERSION__TOOLBAR__ROOT__PLACEHOLDER__/hotsearches-hover.png]]></hoverImage>\n    <updatedImage><![CDATA[__VERSION__TOOLBAR__ROOT__PLACEHOLDER__/hotsearches-hover.png]]></updatedImage>\n    <updatedHoverImage><![CDATA[__VERSION__TOOLBAR__ROOT__PLACEHOLDER__/hotsearches-hover.png]]></updatedHoverImage>\n    <imageType>icon</imageType>\n    <url><![CDATA[http://www.alexa.com/hoturls#hotsearches]]></url>\n    <feedUrl><![CDATA[http://rss.alexa.com/search?r=1]]></feedUrl>\n    <numHeadlines>2</numHeadlines>\n    <minHeadlineWidth>100</minHeadlineWidth>\n    <maxHeadlineWidth>300</maxHeadlineWidth>\n    <randomize>true</randomize>\n    <tooltip><![CDATA[The hottest searches on the web right now]]></tooltip>\n    <id>hs</id>\n    <refreshInterval>300</refreshInterval>\n  </button>\n  <button>\n    <type>javascript</type>\n    <shortText><![CDATA[Review Stars]]></shortText>\n    <id>rs</id>\n    <imageType>fullButton</imageType>\n    <openIn>currentTab</openIn>\n    <javascript><![CDATA[\n      Alexa.events.addPageTurnListener(function(data)\n      {\n        if (data && data.blocked)\n        {\n          Alexa.button.properties.url = 'http://' + data.related[0].link;\n          Alexa.button.properties.tooltip = \"__RANK__TIP__PLACEHOLDER__\";\n        }\n        else if (data && data.averageReview == \"disabled\")\n        {\n          Alexa.button.properties.url = \"\";          \n          Alexa.button.properties.tooltip = \"Disabled\";\n          Alexa.button.properties.image = \"__VERSION__TOOLBAR__ROOT__PLACEHOLDER__/reviews/starsunrated.png\";\n        }\n        else if (!data || !data.site)\n        {\n          Alexa.button.properties.url = \"\";          \n          Alexa.button.properties.tooltip = data.disabled ? \"Disabled\" : \"No data\";\n          Alexa.button.properties.image = \"__VERSION__TOOLBAR__ROOT__PLACEHOLDER__/reviews/starsunrated.png\";\n        }\n        else\n        {\n          Alexa.button.properties.url = \"http://www.alexa.com/siteinfo/__SITE__PLACEHOLDER__#reviews\";\n          if (!data.averageReview || data.averageReview == \"unrated\")\n          {\n            Alexa.button.properties.tooltip = \"No reviews yet for __SITE__PLACEHOLDER__\";\n            Alexa.button.properties.image = \"__VERSION__TOOLBAR__ROOT__PLACEHOLDER__/reviews/starsunrated.png\";\n          }\n          else\n          {\n            Alexa.button.properties.tooltip = \"Avg review for __SITE__PLACEHOLDER__: \" + data.averageReview + \" stars\";\n            Alexa.button.properties.image = \"__VERSION__TOOLBAR__ROOT__PLACEHOLDER__/reviews/stars\" + data.averageReview + \".png\";\n          }\n        }\n      });\n    ]]></javascript>\n  </button>\n  <button>\n    <shortText><![CDATA[Write a Review]]></shortText>\n    <type>javascript</type>\n    <imageType>fullButton</imageType>\n    <openIn>newDialog</openIn>\n    <windowFeatures>width=650,height=500,resizable</windowFeatures>\n    <javascript><![CDATA[\n      Alexa.events.addPageTurnListener(function(data)\n      {\n        if (data && data.blocked)\n        {\n          Alexa.button.properties.url = 'http://' + data.related[0].link;\n          Alexa.button.properties.openIn = \"currentTab\";\n          Alexa.button.properties.tooltip = \"__RANK__TIP__PLACEHOLDER__\";\n        }\n        else if (data && data.site)\n        {\n          Alexa.button.properties.image = \"__VERSION__TOOLBAR__ROOT__PLACEHOLDER__/reviews/write.png\";\n          Alexa.button.properties.hoverImage = \"__VERSION__TOOLBAR__ROOT__PLACEHOLDER__/reviews/write-hover.png\";\n          var extra = \"button_url_root=\" + encodeURIComponent(\"https://s3.amazonaws.com/com.alexa.toolbar/alexa9-prod/1.54/buttons\");\n          var embedded_url = \"http://www.alexa.com/write/review/\" + encodeURIComponent(data.site) + \"?mini=1&version%3D20090929&\" + extra;\n          Alexa.button.properties.url = \"http://www.alexa.com/login/miniframe?resource=\" + encodeURIComponent(embedded_url) + \"&\" + extra;\n          Alexa.button.properties.openIn = \"newDialog\";\n          Alexa.button.properties.windowFeatures = \"width=650,height=500,resizable\";\n          Alexa.button.properties.tooltip = \"Write a review for __SITE__PLACEHOLDER__\";\n        }\n        else\n        {\n          Alexa.button.properties.image = \"__VERSION__TOOLBAR__ROOT__PLACEHOLDER__/reviews/write-disabled.png\";\n          Alexa.button.properties.hoverImage = \"__VERSION__TOOLBAR__ROOT__PLACEHOLDER__/reviews/write-disabled.png\";\n          Alexa.button.properties.url = \"\";\n          Alexa.button.properties.tooltip = data.disabled ? \"Disabled\" : \"No data\";\n        }\n      });\n    ]]></javascript>\n    <id>wr</id>\n  </button>\n  <!--<button>\n    <type>injectJavascript</type>\n    <image><![CDATA[__VERSION__TOOLBAR__ROOT__PLACEHOLDER__/hotsearches.png]]></image>\n    <hoverImage><![CDATA[__VERSION__TOOLBAR__ROOT__PLACEHOLDER__/hotsearches-hover.png]]></hoverImage>\n    <imageType>icon</imageType>\n    <scriptUrl><![CDATA[__VERSION__TOOLBAR__ROOT__PLACEHOLDER__/wishlist.js]]></scriptUrl>\n    <id>uwl</id>\n  </button>-->\n</toolbar>\n");
user_pref("extensions.alexa.toolbarXMLVersion", "alxf-1.54");
user_pref("extensions.alexa.usage-stats", false);
user_pref("extensions.alexa.version", "alxf-1.54");
user_pref("extensions.blocklist.pingCountTotal", 10);
user_pref("extensions.blocklist.pingCountVersion", -1);
user_pref("extensions.bootstrappedAddons", "{}");
user_pref("extensions.databaseSchema", 16);
user_pref("extensions.enabledAddons", "%7B972ce4c6-7e08-4474-a285-3208198ce6fd%7D:31.6.0");
user_pref("extensions.enabledItems", "toolbar@alexa.com:1.54,{73a6fe31-595d-460b-a920-fcc0f8843232}:1.9.9.99,{8f8fe09b-0bd3-4470-bc1b-8cad42b8203a}:0.16,{972ce4c6-7e08-4474-a285-3208198ce6fd}:3.6.13");
user_pref("extensions.getAddons.databaseSchema", 5);
user_pref("extensions.installCache", "[{\"name\":\"app-global\",\"addons\":{\"{972ce4c6-7e08-4474-a285-3208198ce6fd}\":{\"descriptor\":\"/usr/lib64/firefox/browser/extensions/{972ce4c6-7e08-4474-a285-3208198ce6fd}\",\"mtime\":1430421630000,\"rdfTime\":1430421614000}}}]");
user_pref("extensions.lastAppVersion", "31.6.0");
user_pref("extensions.lastPlatformVersion", "31.6.0");
user_pref("extensions.livehttpheaders.exclude", false);
user_pref("extensions.livehttpheaders.excludeRegexp", ".gif$|.jpg$|.ico$|.css$|.js$");
user_pref("extensions.livehttpheaders.filter", false);
user_pref("extensions.livehttpheaders.filterRegexp", "/$|.html$");
user_pref("extensions.livehttpheaders.mode", 1);
user_pref("extensions.livehttpheaders.style", 0);
user_pref("extensions.livehttpheaders.tab", false);
user_pref("extensions.pendingOperations", false);
user_pref("extensions.ui.lastCategory", "addons://list/extension");
user_pref("extensions.ui.locale.hidden", true);
user_pref("extensions.update.notifyUser", false);
user_pref("extensions.xpiState", "{\"app-global\":{\"{972ce4c6-7e08-4474-a285-3208198ce6fd}\":{\"d\":\"/opt/firefox/browser/extensions/{972ce4c6-7e08-4474-a285-3208198ce6fd}\",\"e\":true,\"v\":\"36.0.4\",\"st\":1430407850000,\"mt\":1426914683000}}}");
user_pref("gecko.buildID", "20150430124100");
user_pref("gecko.mstone", "31.6.0");
user_pref("general.useragent.extra.ALX_NS_PH", "AlexaToolbar/alxf-1.54");
user_pref("google.toolbar.linkdoctor.enabled", false);
user_pref("idle.lastDailyNotification", 1375829933);
user_pref("intl.charsetmenu.browser.cache", "ISO-8859-1, windows-1252, UTF-8, Big5-HKSCS, gbk");
user_pref("keyword.URL", "http://search.toolbars.alexa.com/?ver=alxf-1.54&src=ab&aid=yaCHb16VHX00yV&q=");
user_pref("media.gmp-gmpopenh264.lastUpdate", 1430417970);
user_pref("media.gmp-gmpopenh264.version", "1.3");
user_pref("media.gmp-manager.lastCheck", 1430417969);
user_pref("network.cookie.lifetimePolicy", 2);
user_pref("network.cookie.prefsMigrated", true);
user_pref("noscript.ABE.notify", false);
user_pref("noscript.allowHttpsOnly", 0);
user_pref("noscript.autoAllow", 0);
user_pref("noscript.autoReload", false);
user_pref("noscript.badInstall", false);
user_pref("noscript.blockNSWB", true);
user_pref("noscript.clearClick", 3);
user_pref("noscript.clearClick.prompt", false);
user_pref("noscript.filterXExceptions", "^https?://([a-z]+)\\.google\\.(?:[a-z]{1,3}\\.)?[a-z]+/(?:search|custom|\\1)\\?\n^https?://([a-z]*)\\.?search\\.yahoo\\.com/search(?:\\?|/\\1\\b)\n^https?://[a-z]+\\.wikipedia\\.org/wiki/[^\"<>\\?%]+$\n^https?://translate\\.google\\.com/translate_t[^\"'<>\\?%]+$");
user_pref("noscript.firstRunRedirection", false);
user_pref("noscript.forbidBookmarklets", true);
user_pref("noscript.forbidIFrames", true);
user_pref("noscript.forbidJarDocumentsExceptions", "^jar:https://samples\\.noscript\\.net/sample_apps.jar!.*\\.xul$\n");
user_pref("noscript.forbidMetaRefresh", true);
user_pref("noscript.forbidMetaRefresh.notify", false);
user_pref("noscript.global", false);
user_pref("noscript.gtemp", "");
user_pref("noscript.notify", false);
user_pref("noscript.notify.bottom", false);
user_pref("noscript.notify.hideDelay", 5);
user_pref("noscript.nselNever", true);
user_pref("noscript.opacizeObject", 3);
user_pref("noscript.options.tabSelectedIndexes", "0,0,0");
user_pref("noscript.policynames", "");
user_pref("noscript.showUntrustedPlaceholder", false);
user_pref("noscript.sound.block", "chrome://noscript/skin/block.wav");
user_pref("noscript.subscription.lastCheck", 1842191331);
user_pref("noscript.temp", "");
user_pref("noscript.toolbarToggle", 3);
user_pref("noscript.untrusted", "");
user_pref("noscript.version", "1.9.9.99");
user_pref("noscript.xss.notify", false);
user_pref("pdfjs.migrationVersion", 2);
user_pref("pdfjs.previousHandler.alwaysAskBeforeHandling", true);
user_pref("pdfjs.previousHandler.preferredAction", 4);
user_pref("places.database.lastMaintenance", 1375829933);
user_pref("places.history.enabled", false);
user_pref("places.history.expiration.transient_current_max_pages", 75015);
user_pref("places.last_vacuum", 1293336809);
user_pref("plugin.disable_full_page_plugin_for_types", "application/pdf");
user_pref("plugin.importedState", true);
user_pref("plugin.soname.list", "libXt.so:libXext.so");
user_pref("pref.advanced.javascript.disable_button.advanced", false);
user_pref("pref.privacy.disable_button.view_passwords", false);
user_pref("print.tmp.printerfeatures.PostScript/default.can_change_colorspace", false);
user_pref("print.tmp.printerfeatures.PostScript/default.can_change_downloadfonts", false);
user_pref("print.tmp.printerfeatures.PostScript/default.can_change_jobtitle", false);
user_pref("print.tmp.printerfeatures.PostScript/default.can_change_num_copies", true);
user_pref("print.tmp.printerfeatures.PostScript/default.can_change_orientation", true);
user_pref("print.tmp.printerfeatures.PostScript/default.can_change_paper_size", true);
user_pref("print.tmp.printerfeatures.PostScript/default.can_change_plex", false);
user_pref("print.tmp.printerfeatures.PostScript/default.can_change_printincolor", true);
user_pref("print.tmp.printerfeatures.PostScript/default.can_change_resolution", false);
user_pref("print.tmp.printerfeatures.PostScript/default.can_change_spoolercommand", true);
user_pref("print.tmp.printerfeatures.PostScript/default.colorspace.0.name", "default");
user_pref("print.tmp.printerfeatures.PostScript/default.colorspace.count", 1);
user_pref("print.tmp.printerfeatures.PostScript/default.has_special_printerfeatures", true);
user_pref("print.tmp.printerfeatures.PostScript/default.orientation.0.name", "portrait");
user_pref("print.tmp.printerfeatures.PostScript/default.orientation.1.name", "landscape");
user_pref("print.tmp.printerfeatures.PostScript/default.orientation.count", 2);
user_pref("print.tmp.printerfeatures.PostScript/default.paper.0.height_mm", 210);
user_pref("print.tmp.printerfeatures.PostScript/default.paper.0.is_inch", false);
user_pref("print.tmp.printerfeatures.PostScript/default.paper.0.name", "A5");
user_pref("print.tmp.printerfeatures.PostScript/default.paper.0.width_mm", 148);
user_pref("print.tmp.printerfeatures.PostScript/default.paper.1.height_mm", 297);
user_pref("print.tmp.printerfeatures.PostScript/default.paper.1.is_inch", false);
user_pref("print.tmp.printerfeatures.PostScript/default.paper.1.name", "A4");
user_pref("print.tmp.printerfeatures.PostScript/default.paper.1.width_mm", 210);
user_pref("print.tmp.printerfeatures.PostScript/default.paper.2.height_mm", 420);
user_pref("print.tmp.printerfeatures.PostScript/default.paper.2.is_inch", false);
user_pref("print.tmp.printerfeatures.PostScript/default.paper.2.name", "A3");
user_pref("print.tmp.printerfeatures.PostScript/default.paper.2.width_mm", 297);
user_pref("print.tmp.printerfeatures.PostScript/default.paper.3.height_mm", 279);
user_pref("print.tmp.printerfeatures.PostScript/default.paper.3.is_inch", true);
user_pref("print.tmp.printerfeatures.PostScript/default.paper.3.name", "Letter");
user_pref("print.tmp.printerfeatures.PostScript/default.paper.3.width_mm", 215);
user_pref("print.tmp.printerfeatures.PostScript/default.paper.4.height_mm", 355);
user_pref("print.tmp.printerfeatures.PostScript/default.paper.4.is_inch", true);
user_pref("print.tmp.printerfeatures.PostScript/default.paper.4.name", "Legal");
user_pref("print.tmp.printerfeatures.PostScript/default.paper.4.width_mm", 215);
user_pref("print.tmp.printerfeatures.PostScript/default.paper.5.height_mm", 431);
user_pref("print.tmp.printerfeatures.PostScript/default.paper.5.is_inch", true);
user_pref("print.tmp.printerfeatures.PostScript/default.paper.5.name", "Tabloid");
user_pref("print.tmp.printerfeatures.PostScript/default.paper.5.width_mm", 279);
user_pref("print.tmp.printerfeatures.PostScript/default.paper.6.height_mm", 254);
user_pref("print.tmp.printerfeatures.PostScript/default.paper.6.is_inch", true);
user_pref("print.tmp.printerfeatures.PostScript/default.paper.6.name", "Executive");
user_pref("print.tmp.printerfeatures.PostScript/default.paper.6.width_mm", 190);
user_pref("print.tmp.printerfeatures.PostScript/default.paper.count", 7);
user_pref("print.tmp.printerfeatures.PostScript/default.plex.0.name", "default");
user_pref("print.tmp.printerfeatures.PostScript/default.plex.count", 1);
user_pref("print.tmp.printerfeatures.PostScript/default.resolution.0.name", "default");
user_pref("print.tmp.printerfeatures.PostScript/default.resolution.count", 1);
user_pref("print.tmp.printerfeatures.PostScript/default.supports_colorspace_change", false);
user_pref("print.tmp.printerfeatures.PostScript/default.supports_downloadfonts_change", false);
user_pref("print.tmp.printerfeatures.PostScript/default.supports_jobtitle_change", false);
user_pref("print.tmp.printerfeatures.PostScript/default.supports_orientation_change", true);
user_pref("print.tmp.printerfeatures.PostScript/default.supports_paper_size_change", true);
user_pref("print.tmp.printerfeatures.PostScript/default.supports_plex_change", false);
user_pref("print.tmp.printerfeatures.PostScript/default.supports_printincolor_change", true);
user_pref("print.tmp.printerfeatures.PostScript/default.supports_resolution_change", false);
user_pref("print.tmp.printerfeatures.PostScript/default.supports_spoolercommand_change", true);
user_pref("privacy.clearOnShutdown.offlineApps", true);
user_pref("privacy.clearOnShutdown.passwords", true);
user_pref("privacy.clearOnShutdown.siteSettings", true);
user_pref("privacy.donottrackheader.enabled", true);
user_pref("privacy.sanitize.didShutdownSanitize", true);
user_pref("privacy.sanitize.migrateFx3Prefs", true);
user_pref("privacy.sanitize.sanitizeOnShutdown", true);
user_pref("security.warn_entering_weak", false);
user_pref("security.warn_viewing_mixed", false);
user_pref("services.sync.clients.lastSync", "0");
user_pref("services.sync.clients.lastSyncLocal", "0");
user_pref("services.sync.globalScore", 0);
user_pref("services.sync.migrated", true);
user_pref("services.sync.nextSync", 0);
user_pref("services.sync.tabs.lastSync", "0");
user_pref("services.sync.tabs.lastSyncLocal", "0");
user_pref("signon.importedFromSqlite", true);
user_pref("signon.rememberSignons", false);
user_pref("spellchecker.dictionary", "en_AU");
user_pref("storage.vacuum.last.index", 0);
user_pref("storage.vacuum.last.places.sqlite", 1375829933);
user_pref("toolkit.startup.last_success", 1430424662);
user_pref("toolkit.telemetry.previousBuildID", "20150430124100");
user_pref("toolkit.telemetry.prompted", 2);
user_pref("urlclassifier.keyupdatetime.https://sb-ssl.google.com/safebrowsing/newkey", 1272311548);
user_pref("xpinstall.whitelist.add", "");
user_pref("xpinstall.whitelist.add.103", "");
user_pref("xpinstall.whitelist.add.180", "");
user_pref("xpinstall.whitelist.add.36", "");
user_pref("xpinstall.whitelist.required", false);
